# Development Environment Resource Limits
# Source this file before running tests or heavy operations:
# source .env.development

# Pytest configuration
export PYTEST_MAX_WORKERS=1
export PYTEST_DISABLE_XDIST=1
export PYTEST_CURRENT_TEST_TIMEOUT=300

# Prefect configuration  
export PREFECT_TASK_RUNNER_MAX_WORKERS=1
export PREFECT_LOCAL_STORAGE_PATH=./.prefect
export PREFECT_API_ENABLE_HTTP2=false

# Python configuration
export PYTHONDONTWRITEBYTECODE=1
export PYTHON_GC_THRESHOLD=100  # Aggressive garbage collection
export PYTHONUNBUFFERED=1

# UV configuration
export UV_NO_CACHE=1
export UV_SYSTEM_PYTHON=0

# System resource limits (enforced by safe-run.sh)
export MAX_MEMORY_MB=8192       # 8GB max per operation
export MAX_PROCESSES=50         # 50 processes max
export CHECK_INTERVAL=2         # Check every 2 seconds
export TIMEOUT=1800            # 30 minute timeout

# Development flags
export MFR_SEQUENTIAL_MODE=1
export MFR_RESOURCE_MONITORING=1
export MFR_FAIL_FAST=1

# Set system limits (if supported by shell)
if [ -n "$BASH_VERSION" ] || [ -n "$ZSH_VERSION" ]; then
    # Process limits
    ulimit -u 100 2>/dev/null || true      # Max 100 processes
    
    # Memory limits  
    ulimit -v 8388608 2>/dev/null || true  # Max 8GB virtual memory
    ulimit -m 8388608 2>/dev/null || true  # Max 8GB RSS
    
    # File limits
    ulimit -n 1024 2>/dev/null || true     # Max 1024 open files
    
    echo "Development environment loaded with resource limits:"
    echo "  Max processes: 100"
    echo "  Max memory: 8GB" 
    echo "  Max files: 1024"
    echo "  Sequential mode: ENABLED"
fi