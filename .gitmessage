# <type>(<scope>): <subject>
# |<----   Preferably using up to 50 chars   --->|<----- No more than 72 chars ----->|

# <body>
# |<----   Try To Limit Each Line to a Maximum Of 72 Characters   ---->|

# <footer>

# --- COMMIT END ---
# Type can be
#    feat     (new feature for the user, not a new feature for build script)
#    fix      (bug fix for the user, not a fix to a build script)
#    docs     (changes to the documentation)
#    style    (formatting, missing semi colons, etc; no production code change)
#    refactor (refactoring production code, eg. renaming a variable)
#    test     (adding missing tests, refactoring tests; no production code change)
#    chore    (updating grunt tasks etc; no production code change)
#    build    (changes that affect the build system or external dependencies)
#    ci       (changes to CI configuration files and scripts)
#    perf     (performance improvements)
#    revert   (reverting a previous commit)
# --------------------
# Scope can be anything specifying place of the commit change. For example:
#    - module name
#    - file name
#    - feature name
#    - component name
# --------------------
# Subject should use imperative tone and say what the commit does, not what was done.
# For example, use "change" not "changed" or "changes".
# --------------------
# Body should include motivation for the change and contrasts with previous behavior.
# --------------------
# Footer should contain any information about Breaking Changes and is also
# the place to reference GitHub issues that this commit closes.
# --------------------
# Remember to:
#   - Capitalize the subject line
#   - Use the imperative mood in the subject line
#   - Do not end the subject line with a period
#   - Separate subject from body with a blank line
#   - Use the body to explain what and why vs. how
#   - Can use multiple lines with "-" or "*" for bullet points in body
# --------------------
