name: Pre-commit

on:
  pull_request:
  push:
    branches: [main, develop]
  workflow_dispatch:  # Allow manual triggers

env:
  UV_VERSION: "0.7.13"
  DEFAULT_PYTHON: "3.11"

jobs:
  pre-commit:
    name: Pre-commit checks
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for better hook execution

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: ${{ env.UV_VERSION }}
        enable-cache: true
        cache-dependency-glob: |
          pyproject.toml
          uv.lock
          .pre-commit-config.yaml

    - name: Set up Python
      run: |
        uv python install ${{ env.DEFAULT_PYTHON }}
        uv python pin ${{ env.DEFAULT_PYTHON }}

    - name: Install dependencies
      run: |
        uv sync --all-extras
        uv pip install pre-commit yamllint

    - name: Install actionlint
      run: |
        # Install actionlint binary
        VERSION=$(curl -s https://api.github.com/repos/rhysd/actionlint/releases/latest | \
          grep '"tag_name"' | sed -E 's/.*"tag_name": "([^"]+)".*/\1/')
        VERSION_NUM=${VERSION#v}
        DL_URL="https://github.com/rhysd/actionlint/releases/download/${VERSION}/"
        DL_URL="${DL_URL}actionlint_${VERSION_NUM}_linux_amd64.tar.gz"
        curl -L "${DL_URL}" | sudo tar xz -C /usr/local/bin
        sudo chmod +x /usr/local/bin/actionlint

    - name: Set up Go for yamlfmt
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'

    - name: Install yamlfmt
      run: |
        go install github.com/google/yamlfmt/cmd/yamlfmt@latest
        echo "$HOME/go/bin" >> "$GITHUB_PATH"

    - name: Cache pre-commit environments
      uses: actions/cache@v4
      with:
        path: ~/.cache/pre-commit
        key: pre-commit-3|${{ hashFiles('.pre-commit-config.yaml') }}
        restore-keys: |
          pre-commit-3|
          pre-commit-

    - name: Run pre-commit
      run: uv run pre-commit run --all-files --show-diff-on-failure --color=always
      env:
        SKIP: pip-compile  # Skip pip-compile in CI as we manage deps with uv

    - name: Run deptry separately for detailed output
      run: uv run deptry src --config pyproject.toml

    - name: Run yamllint separately for detailed output
      run: uv run yamllint -c .yamllint.yml .

    - name: Run actionlint separately for detailed output
      if: always()  # Run even if previous steps fail
      run: actionlint
