name: Security Checks

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

# Make workflow cancellable for PRs
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

env:
  PYTHON_VERSION: "3.11"
  UV_VERSION: "0.7.13"
  # Git configuration
  GIT_AUTHOR_NAME: "Emasoft"
  GIT_AUTHOR_EMAIL: "713559+Emasoft@users.noreply.github.com"
  GIT_COMMITTER_NAME: "Emasoft"
  GIT_COMMITTER_EMAIL: "713559+Emasoft@users.noreply.github.com"

jobs:
  gitleaks:
    name: Gitleaks Secret Scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for scanning

    - name: Run Gitleaks
      uses: gitleaks/gitleaks-action@v2
      with:
        config-path: .gitleaks.toml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  dependency-check:
    name: Dependency Security Check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: ${{ env.UV_VERSION }}
        enable-cache: true
        cache-dependency-glob: |
          **/pyproject.toml
          **/uv.lock

    - name: Install dependencies
      run: |
        uv sync --frozen --all-extras

    - name: Run deptry
      run: |
        uv run deptry src

    - name: Check for vulnerable dependencies
      run: |
        uv run pip-audit

  code-quality:
    name: Code Quality and Security
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: ${{ env.UV_VERSION }}
        enable-cache: true
        cache-dependency-glob: |
          **/pyproject.toml
          **/uv.lock

    - name: Install dependencies
      run: |
        uv sync --frozen --all-extras

    - name: Run security linters
      run: |
        # Run bandit for security issues
        uv run bandit -r src -f json -o bandit-report.json || true

        # Run safety check
        uv run safety check --json --output safety-report.json || true

    - name: Upload security reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports
        path: |-
          bandit-report.json
          safety-report.json
