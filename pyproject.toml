[project]
name = "mass-find-replace"
version = "0.1.0"
description = "A sophisticated Python tool for safe, surgical find-and-replace operations across directory structures"
authors = [
    {name = "Emasoft", email = "713559+Emasoft@users.noreply.github.com"},
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.10"
dependencies = [
    "prefect>=3.0.0",
    "chardet>=4.0.0",
    "isbinary>=1.0.0",
    "pathspec>=0.12.0",
    "striprtf>=0.0.26",
]
keywords = ["find-replace", "refactoring", "cli", "unicode", "encoding"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: General",
    "Topic :: Utilities",
]

[project.urls]
Homepage = "https://github.com/Emasoft/MFR"
Repository = "https://github.com/Emasoft/MFR"
Issues = "https://github.com/Emasoft/MFR/issues"

[project.scripts]
mfr = "mass_find_replace.mass_find_replace:main_cli"
mass-find-replace = "mass_find_replace.mass_find_replace:main_cli"

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=6.0.0",
    "mypy>=1.0.0",
    "ruff>=0.5.0",
    "deptry>=0.23.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
packages = ["src/mass_find_replace"]

[tool.hatch.build.targets.wheel]
packages = ["src/mass_find_replace"]

[tool.hatch.build.targets.sdist]
include = [
    "src/mass_find_replace/**/*.py",
    "tests/**/*.py",
    "replacement_mapping.json",
    "requirements.txt",
    "requirements-dev.txt",
    "README.md",
    "LICENSE",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
explicit_package_bases = true

[tool.deptry]
# Ignore development dependencies that are not imported in source code
ignore = ["DEP001", "DEP003"]  # Missing and transitive dependencies
extend_exclude = [
    "tests",
    "docs",
    "build",
    "dist",
]
known_first_party = ["mass_find_replace"]

[tool.deptry.per_rule_ignores]
DEP002 = ["pytest", "pytest-cov", "mypy", "ruff", "deptry"]  # Development tools not used in source