Test Python 3.10 on ubuntu-latest	Set up job	﻿2025-06-24T14:59:17.2566674Z Current runner version: '2.325.0'
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:17.2601351Z ##[group]Runner Image Provisioner
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:17.2605756Z Hosted Compute Agent
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:17.2606685Z Version: 20250620.352
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:17.2607711Z Commit: f262f3aba23b10ea191b2a62bdee1ca4c3d344da
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:17.2608929Z Build Date: 2025-06-20T19:27:17Z
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:17.2609881Z ##[endgroup]
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:17.2610803Z ##[group]Operating System
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:17.2611831Z Ubuntu
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:17.2612877Z 24.04.2
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:17.2613596Z LTS
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:17.2614426Z ##[endgroup]
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:17.2615223Z ##[group]Runner Image
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:17.2616189Z Image: ubuntu-24.04
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:17.2616954Z Version: 20250602.3.0
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:17.2618926Z Included Software: https://github.com/actions/runner-images/blob/ubuntu24/20250602.3/images/ubuntu/Ubuntu2404-Readme.md
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:17.2621401Z Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu24%2F20250602.3
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:17.2623760Z ##[endgroup]
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:17.2625543Z ##[group]GITHUB_TOKEN Permissions
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:17.2628672Z Contents: read
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:17.2629487Z Metadata: read
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:17.2630284Z Packages: read
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:17.2631201Z ##[endgroup]
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:17.2634608Z Secret source: Actions
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:17.2635720Z Prepare workflow directory
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:17.3233814Z Prepare all required actions
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:17.3294476Z Getting action download info
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:17.6799858Z ##[group]Download immutable action package 'actions/checkout@v4'
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:17.6801059Z Version: 4.2.2
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:17.6802156Z Digest: sha256:ccb2698953eaebd21c7bf6268a94f9c26518a7e38e27e0b83c1fe1ad049819b1
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:17.6803546Z Source commit SHA: 11bd71901bbe5b1630ceea73d27597364c9af683
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:17.6804253Z ##[endgroup]
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:17.7828037Z Download action repository 'astral-sh/setup-uv@v6' (SHA:445689ea25e0de0a23313031f5fe577c74ae45a1)
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:18.2033468Z Download action repository 'codecov/codecov-action@v5' (SHA:18283e04ce6e62d37312384ff67231eb8fd56d24)
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:18.5521530Z Getting action download info
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:18.6951177Z ##[group]Download immutable action package 'actions/github-script@v7'
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:18.6952476Z Version: 7.0.1
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:18.6953440Z Digest: sha256:bce02966afe3a75123f766b765abe432fac5464b74976015dc06b811ac9054c7
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:18.6954786Z Source commit SHA: 60a0d83039c74a4aee543508d2ffcb1c3799cdea
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:18.6955704Z ##[endgroup]
Test Python 3.10 on ubuntu-latest	Set up job	2025-06-24T14:59:18.9151142Z Complete job name: Test Python 3.10 on ubuntu-latest
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	﻿2025-06-24T14:59:18.9805261Z ##[group]Run actions/checkout@v4
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:18.9806392Z with:
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:18.9806850Z   repository: Emasoft/MFR
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:18.9807727Z   token: ***
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:18.9808152Z   ssh-strict: true
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:18.9808615Z   ssh-user: git
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:18.9809095Z   persist-credentials: true
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:18.9809637Z   clean: true
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:18.9810152Z   sparse-checkout-cone-mode: true
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:18.9810707Z   fetch-depth: 1
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:18.9811135Z   fetch-tags: false
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:18.9811573Z   show-progress: true
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:18.9812056Z   lfs: false
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:18.9812737Z   submodules: false
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:18.9813229Z   set-safe-directory: true
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:18.9814239Z env:
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:18.9814674Z   UV_VERSION: 0.7.13
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:18.9815153Z   DEFAULT_PYTHON: 3.11
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:18.9815632Z   GIT_AUTHOR_NAME: Emasoft
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:18.9816232Z   GIT_AUTHOR_EMAIL: 713559+Emasoft@users.noreply.github.com
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:18.9816948Z   GIT_COMMITTER_NAME: Emasoft
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:18.9817672Z   GIT_COMMITTER_EMAIL: 713559+Emasoft@users.noreply.github.com
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:18.9818391Z ##[endgroup]
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.0913613Z Syncing repository: Emasoft/MFR
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.0915554Z ##[group]Getting Git version info
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.0916276Z Working directory is '/home/runner/work/MFR/MFR'
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.0917649Z [command]/usr/bin/git version
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.0981601Z git version 2.49.0
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.1009789Z ##[endgroup]
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.1025340Z Temporarily overriding HOME='/home/runner/work/_temp/792a711a-d856-409c-9519-1fb0fbdeedc0' before making global git config changes
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.1027232Z Adding repository directory to the temporary git global config as a safe directory
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.1039150Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/MFR/MFR
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.1079965Z Deleting the contents of '/home/runner/work/MFR/MFR'
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.1084323Z ##[group]Initializing the repository
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.1088403Z [command]/usr/bin/git init /home/runner/work/MFR/MFR
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.1171828Z hint: Using 'master' as the name for the initial branch. This default branch name
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.1173514Z hint: is subject to change. To configure the initial branch name to use in all
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.1175158Z hint: of your new repositories, which will suppress this warning, call:
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.1176592Z hint:
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.1177574Z hint: 	git config --global init.defaultBranch <name>
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.1178801Z hint:
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.1179709Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.1180870Z hint: 'development'. The just-created branch can be renamed via this command:
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.1181756Z hint:
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.1182189Z hint: 	git branch -m <name>
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.1183365Z Initialized empty Git repository in /home/runner/work/MFR/MFR/.git/
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.1190950Z [command]/usr/bin/git remote add origin https://github.com/Emasoft/MFR
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.1226471Z ##[endgroup]
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.1227270Z ##[group]Disabling automatic garbage collection
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.1230957Z [command]/usr/bin/git config --local gc.auto 0
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.1259927Z ##[endgroup]
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.1260708Z ##[group]Setting up auth
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.1267679Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.1300976Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.1623989Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.1658077Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.1888207Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.1933751Z ##[endgroup]
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.1935229Z ##[group]Fetching the repository
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.1944316Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +fb05d81000e4fcf74580b4246fdabec87a922417:refs/remotes/origin/main
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.5838976Z From https://github.com/Emasoft/MFR
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.5840301Z  * [new ref]         fb05d81000e4fcf74580b4246fdabec87a922417 -> origin/main
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.5867946Z ##[endgroup]
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.5868728Z ##[group]Determining the checkout info
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.5870129Z ##[endgroup]
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.5875707Z [command]/usr/bin/git sparse-checkout disable
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.5919351Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.5948910Z ##[group]Checking out the ref
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.5954414Z [command]/usr/bin/git checkout --progress --force -B main refs/remotes/origin/main
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.6076473Z Switched to a new branch 'main'
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.6078492Z branch 'main' set up to track 'origin/main'.
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.6084627Z ##[endgroup]
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.6120144Z [command]/usr/bin/git log -1 --format=%H
Test Python 3.10 on ubuntu-latest	Run actions/checkout@v4	2025-06-24T14:59:19.6143480Z fb05d81000e4fcf74580b4246fdabec87a922417
Test Python 3.10 on ubuntu-latest	Install uv	﻿2025-06-24T14:59:19.6383081Z ##[group]Run astral-sh/setup-uv@v6
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:19.6383714Z with:
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:19.6384102Z   version: 0.7.13
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:19.6384519Z   enable-cache: true
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:19.6385052Z   cache-dependency-glob: pyproject.toml
Test Python 3.10 on ubuntu-latest	Install uv	uv.lock
Test Python 3.10 on ubuntu-latest	Install uv
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:19.6385694Z   activate-environment: false
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:19.6386253Z   working-directory: /home/runner/work/MFR/MFR
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:19.6386867Z   server-url: https://github.com
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:19.6387596Z   github-token: ***
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:19.6388031Z   prune-cache: true
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:19.6388483Z   ignore-nothing-to-cache: false
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:19.6389013Z   ignore-empty-workdir: false
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:19.6389493Z env:
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:19.6389916Z   UV_VERSION: 0.7.13
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:19.6390356Z   DEFAULT_PYTHON: 3.11
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:19.6390806Z   GIT_AUTHOR_NAME: Emasoft
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:19.6391387Z   GIT_AUTHOR_EMAIL: 713559+Emasoft@users.noreply.github.com
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:19.6392098Z   GIT_COMMITTER_NAME: Emasoft
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:19.6392903Z   GIT_COMMITTER_EMAIL: 713559+Emasoft@users.noreply.github.com
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:19.6393596Z ##[endgroup]
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:19.8766497Z manifest-file not provided, reading from local file.
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:19.8813748Z Downloading uv from "https://github.com/astral-sh/uv/releases/download/0.7.13/uv-x86_64-unknown-linux-gnu.tar.gz" ...
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:20.3848884Z [command]/usr/bin/tar xz --warning=no-unknown-keyword --overwrite -C /home/runner/work/_temp/f80a5b93-5f9b-4723-b14e-05c16810a85e -f /home/runner/work/_temp/e43de08d-56cb-4d75-8e2d-865b20193502
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:20.7470179Z Added /home/runner/.local/bin to the path
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:20.7474531Z Added /opt/hostedtoolcache/uv/0.7.13/x86_64 to the path
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:20.7502246Z Set UV_CACHE_DIR to /home/runner/work/_temp/setup-uv-cache
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:20.7504804Z Successfully installed uv version 0.7.13
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:20.7507176Z Searching files using cache dependency glob: pyproject.toml,uv.lock
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:20.7534450Z /home/runner/work/MFR/MFR/pyproject.toml
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:20.7551350Z /home/runner/work/MFR/MFR/uv.lock
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:20.7564903Z Found 2 files to hash.
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:20.8240927Z Trying to restore uv cache from GitHub Actions cache with key: setup-uv-1-x86_64-unknown-linux-gnu-3.12.3-pruned-475f3336852fad31a4b6a52612d3fc3af5c239d5b7236d02e5bd7dca2ab8fe21
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:20.9518014Z Cache hit for: setup-uv-1-x86_64-unknown-linux-gnu-3.12.3-pruned-475f3336852fad31a4b6a52612d3fc3af5c239d5b7236d02e5bd7dca2ab8fe21
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:21.1467744Z Received 79019 of 79019 (100.0%), 1.1 MBs/sec
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:21.1469923Z Cache Size: ~0 MB (79019 B)
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:21.1499709Z [command]/usr/bin/tar -xf /home/runner/work/_temp/7dcddc75-51fc-4afc-9a0d-e028dd7cc1b3/cache.tzst -P -C /home/runner/work/MFR/MFR --use-compress-program unzstd
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:21.1590618Z Cache restored successfully
Test Python 3.10 on ubuntu-latest	Install uv	2025-06-24T14:59:21.1599902Z uv cache restored from GitHub Actions cache with key: setup-uv-1-x86_64-unknown-linux-gnu-3.12.3-pruned-475f3336852fad31a4b6a52612d3fc3af5c239d5b7236d02e5bd7dca2ab8fe21
Test Python 3.10 on ubuntu-latest	Set up Python 3.10	﻿2025-06-24T14:59:21.1788511Z ##[group]Run uv python install 3.10
Test Python 3.10 on ubuntu-latest	Set up Python 3.10	2025-06-24T14:59:21.1789705Z [36;1muv python install 3.10[0m
Test Python 3.10 on ubuntu-latest	Set up Python 3.10	2025-06-24T14:59:21.1790715Z [36;1muv python pin 3.10[0m
Test Python 3.10 on ubuntu-latest	Set up Python 3.10	2025-06-24T14:59:21.1867124Z shell: /usr/bin/bash -e {0}
Test Python 3.10 on ubuntu-latest	Set up Python 3.10	2025-06-24T14:59:21.1868100Z env:
Test Python 3.10 on ubuntu-latest	Set up Python 3.10	2025-06-24T14:59:21.1868789Z   UV_VERSION: 0.7.13
Test Python 3.10 on ubuntu-latest	Set up Python 3.10	2025-06-24T14:59:21.1869617Z   DEFAULT_PYTHON: 3.11
Test Python 3.10 on ubuntu-latest	Set up Python 3.10	2025-06-24T14:59:21.1870468Z   GIT_AUTHOR_NAME: Emasoft
Test Python 3.10 on ubuntu-latest	Set up Python 3.10	2025-06-24T14:59:21.1871619Z   GIT_AUTHOR_EMAIL: 713559+Emasoft@users.noreply.github.com
Test Python 3.10 on ubuntu-latest	Set up Python 3.10	2025-06-24T14:59:21.1873124Z   GIT_COMMITTER_NAME: Emasoft
Test Python 3.10 on ubuntu-latest	Set up Python 3.10	2025-06-24T14:59:21.1874367Z   GIT_COMMITTER_EMAIL: 713559+Emasoft@users.noreply.github.com
Test Python 3.10 on ubuntu-latest	Set up Python 3.10	2025-06-24T14:59:21.1875833Z   UV_CACHE_DIR: /home/runner/work/_temp/setup-uv-cache
Test Python 3.10 on ubuntu-latest	Set up Python 3.10	2025-06-24T14:59:21.1876993Z ##[endgroup]
Test Python 3.10 on ubuntu-latest	Set up Python 3.10	2025-06-24T14:59:21.4365174Z Downloading cpython-3.10.18-linux-x86_64-gnu (download) (28.8MiB)
Test Python 3.10 on ubuntu-latest	Set up Python 3.10	2025-06-24T14:59:22.3039494Z  Downloading cpython-3.10.18-linux-x86_64-gnu (download)
Test Python 3.10 on ubuntu-latest	Set up Python 3.10	2025-06-24T14:59:22.3161698Z Installed Python 3.10.18 in 1.11s
Test Python 3.10 on ubuntu-latest	Set up Python 3.10	2025-06-24T14:59:22.3162793Z  + cpython-3.10.18-linux-x86_64-gnu
Test Python 3.10 on ubuntu-latest	Set up Python 3.10	2025-06-24T14:59:22.5325352Z Pinned `.python-version` to `3.10`
Test Python 3.10 on ubuntu-latest	Install dependencies	﻿2025-06-24T14:59:22.5373999Z ##[group]Run uv sync --all-extras
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:22.5374359Z [36;1muv sync --all-extras[0m
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:22.5426438Z shell: /usr/bin/bash -e {0}
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:22.5426732Z env:
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:22.5426937Z   UV_VERSION: 0.7.13
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:22.5427169Z   DEFAULT_PYTHON: 3.11
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:22.5427422Z   GIT_AUTHOR_NAME: Emasoft
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:22.5427750Z   GIT_AUTHOR_EMAIL: 713559+Emasoft@users.noreply.github.com
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:22.5428126Z   GIT_COMMITTER_NAME: Emasoft
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:22.5428468Z   GIT_COMMITTER_EMAIL: 713559+Emasoft@users.noreply.github.com
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:22.5428937Z   UV_CACHE_DIR: /home/runner/work/_temp/setup-uv-cache
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:22.5429264Z ##[endgroup]
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:22.5587657Z Using CPython 3.10.18
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:22.5588112Z Creating virtual environment at: .venv
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:22.5718157Z Resolved 150 packages in 0.86ms
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:22.5859260Z    Building mass-find-replace @ file:///home/runner/work/MFR/MFR
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:22.6448697Z Downloading uv (16.9MiB)
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:22.6450001Z Downloading mypy (12.0MiB)
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:22.6450788Z Downloading ruff (11.1MiB)
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:22.6451870Z Downloading virtualenv (5.8MiB)
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:22.6453418Z Downloading prefect (5.8MiB)
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:22.6455133Z Downloading cryptography (4.2MiB)
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:22.6456814Z Downloading sqlalchemy (3.0MiB)
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:22.6458231Z Downloading asyncpg (2.8MiB)
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:22.6460322Z Downloading pydantic-core (2.0MiB)
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:22.6461504Z Downloading deptry (1.7MiB)
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:22.6463594Z Downloading pip (1.7MiB)
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:22.6465126Z Downloading apprise (1.3MiB)
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:22.6466934Z Downloading pygments (1.2MiB)
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:22.6468586Z Downloading setuptools (1.1MiB)
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:22.6470235Z Downloading nltk (1.4MiB)
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:23.3530654Z  Downloading deptry
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:23.3797937Z  Downloading apprise
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:23.3929449Z  Downloading pydantic-core
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:23.5151700Z  Downloading pygments
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:23.5160217Z  Downloading asyncpg
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:23.6918385Z  Downloading virtualenv
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:23.7237938Z  Downloading sqlalchemy
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:23.7593446Z  Downloading nltk
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:23.7614353Z  Downloading pip
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:23.7681748Z  Downloading cryptography
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:23.8351782Z  Downloading setuptools
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:23.8449296Z  Downloading ruff
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:23.9758571Z  Downloading uv
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:23.9905936Z       Built mass-find-replace @ file:///home/runner/work/MFR/MFR
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.0010704Z  Downloading prefect
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.1104678Z  Downloading mypy
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.1108120Z Prepared 149 packages in 1.53s
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2253476Z Installed 149 packages in 114ms
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2255172Z  + aiosqlite==0.21.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2255553Z  + alembic==1.16.2
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2255924Z  + annotated-types==0.7.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2256320Z  + anyio==4.9.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2256668Z  + apprise==1.9.3
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2257122Z  + asgi-lifespan==2.1.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2257512Z  + async-timeout==5.0.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2257890Z  + asyncpg==0.30.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2258246Z  + attrs==25.3.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2258595Z  + authlib==1.6.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2259016Z  + backports-datetime-fromisoformat==2.0.3
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2259678Z  + bandit==1.8.5
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2259963Z  + boolean-py==5.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2260268Z  + cachecontrol==0.14.3
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2262209Z  + cachetools==6.1.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2263064Z  + certifi==2025.6.15
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2263429Z  + cffi==1.17.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2263724Z  + cfgv==3.4.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2264024Z  + chardet==4.0.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2264636Z  + charset-normalizer==3.4.2
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2264995Z  + click==8.1.8
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2265313Z  + cloudpickle==3.1.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2265654Z  + colorama==0.4.6
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2265955Z  + coolname==2.2.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2266254Z  + coverage==7.9.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2266816Z  + cryptography==45.0.4
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2267178Z  + cyclonedx-python-lib==9.1.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2267559Z  + dateparser==1.2.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2267883Z  + defusedxml==0.7.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2268193Z  + deptry==0.23.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2268487Z  + distlib==0.3.9
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2268778Z  + docker==7.1.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2269071Z  + dparse==0.6.4
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2269377Z  + exceptiongroup==1.3.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2269717Z  + fastapi==0.115.13
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2270020Z  + filelock==3.16.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2270324Z  + fsspec==2025.5.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2270626Z  + graphviz==0.21
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2270923Z  + greenlet==3.2.3
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2271216Z  + griffe==1.7.3
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2271519Z  + h11==0.16.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2271796Z  + h2==4.2.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2272071Z  + hpack==4.1.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2272549Z  + httpcore==1.0.9
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2272851Z  + httpx==0.28.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2273139Z  + humanize==4.12.3
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2273446Z  + hyperframe==6.1.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2273766Z  + identify==2.6.12
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2274060Z  + idna==3.10
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2274367Z  + importlib-metadata==8.7.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2274742Z  + iniconfig==2.1.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2275050Z  + isbinary==1.0.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2275354Z  + jinja2==3.1.6
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2275684Z  + jinja2-humanize-extension==0.4.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2276078Z  + joblib==1.5.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2276369Z  + jsonpatch==1.33
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2276678Z  + jsonpointer==3.0.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2277002Z  + jsonschema==4.24.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2277347Z  + jsonschema-specifications==2025.4.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2277782Z  + license-expression==30.4.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2278172Z  + mako==1.3.10
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2278515Z  + markdown==3.8.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2278910Z  + markdown-it-py==3.0.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2279253Z  + markupsafe==3.0.2
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2279570Z  + marshmallow==4.0.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2280051Z  + mass-find-replace==0.3.0a0 (from file:///home/runner/work/MFR/MFR)
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2280608Z  + mdurl==0.1.2
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2280901Z  + msgpack==1.1.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2281200Z  + mypy==1.16.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2281505Z  + mypy-extensions==1.1.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2281846Z  + nltk==3.9.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2282129Z  + nodeenv==1.9.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2282726Z  + oauthlib==3.3.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2283066Z  + opentelemetry-api==1.34.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2283425Z  + orjson==3.10.18
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2283739Z  + packageurl-python==0.17.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2284125Z  + packaging==25.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2284431Z  + pathspec==0.12.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2284747Z  + pbr==6.1.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2285033Z  + pendulum==3.1.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2285341Z  + pip==25.1.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2285633Z  + pip-api==0.0.34
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2285923Z  + pip-audit==2.9.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2286265Z  + pip-requirements-parser==32.0.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2286676Z  + platformdirs==4.3.8
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2286995Z  + pluggy==1.6.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2287310Z  + pre-commit==4.2.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2287619Z  + prefect==3.4.6
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2287928Z  + prometheus-client==0.22.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2288279Z  + psutil==6.1.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2288592Z  + py-serializable==2.0.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2288926Z  + pycparser==2.22
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2289233Z  + pydantic==2.9.2
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2289544Z  + pydantic-core==2.23.4
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2289900Z  + pydantic-extra-types==2.10.5
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2290288Z  + pydantic-settings==2.9.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2290646Z  + pygments==2.19.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2290958Z  + pyparsing==3.2.3
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2291255Z  + pytest==8.4.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2291558Z  + pytest-cov==6.2.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2292110Z  + python-dateutil==2.9.0.post0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2292668Z  + python-dotenv==1.1.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2293013Z  + python-slugify==8.0.4
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2293356Z  + python-socks==2.7.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2293669Z  + pytz==2025.2
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2293961Z  + pyyaml==6.0.2
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2294476Z  + readchar==4.2.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2294781Z  + referencing==0.36.2
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2295125Z  + regex==2024.11.6
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2295422Z  + requests==2.32.4
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2295741Z  + requests-oauthlib==2.0.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2296111Z  + requirements-parser==0.13.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2296527Z  + rfc3339-validator==0.1.4
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2296866Z  + rich==14.0.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2297153Z  + rpds-py==0.25.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2297462Z  + ruamel-yaml==0.18.14
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2297800Z  + ruamel-yaml-clib==0.2.12
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2298130Z  + ruff==0.12.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2298413Z  + safety==3.5.2
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2298728Z  + safety-schemas==0.0.14
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2299082Z  + setuptools==80.9.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2299412Z  + shellingham==1.5.4
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2299721Z  + six==1.17.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2300003Z  + sniffio==1.3.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2300321Z  + sortedcontainers==2.4.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2300670Z  + sqlalchemy==2.0.41
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2300997Z  + starlette==0.46.2
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2301300Z  + stevedore==5.4.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2301602Z  + striprtf==0.0.29
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2301899Z  + tenacity==9.1.2
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2302200Z  + text-unidecode==1.3
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2302693Z  + toml==0.10.2
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2302990Z  + tomli==2.2.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2303272Z  + tomlkit==0.13.3
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2303565Z  + tqdm==4.67.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2303855Z  + typer==0.16.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2304154Z  + types-chardet==5.0.4.6
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2304514Z  + typing-extensions==4.14.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2304873Z  + typing-inspection==0.4.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2305177Z  + tzdata==2025.2
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2305457Z  + tzlocal==5.3.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2305749Z  + ujson==5.10.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2306026Z  + urllib3==2.5.0
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2306314Z  + uv==0.7.13
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2306596Z  + uvicorn==0.34.3
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2306900Z  + virtualenv==20.31.2
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2307219Z  + websockets==15.0.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2307536Z  + yamllint==1.37.1
Test Python 3.10 on ubuntu-latest	Install dependencies	2025-06-24T14:59:24.2307839Z  + zipp==3.23.0
Test Python 3.10 on ubuntu-latest	Run tests with coverage	﻿2025-06-24T14:59:24.2387064Z ##[group]Run uv run pytest tests/ -v --cov=src/mass_find_replace --cov-report=xml --cov-report=term
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:24.2387722Z [36;1muv run pytest tests/ -v --cov=src/mass_find_replace --cov-report=xml --cov-report=term[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:24.2437827Z shell: /usr/bin/bash -e {0}
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:24.2438130Z env:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:24.2438304Z   UV_VERSION: 0.7.13
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:24.2438507Z   DEFAULT_PYTHON: 3.11
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:24.2438704Z   GIT_AUTHOR_NAME: Emasoft
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:24.2438983Z   GIT_AUTHOR_EMAIL: 713559+Emasoft@users.noreply.github.com
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:24.2439299Z   GIT_COMMITTER_NAME: Emasoft
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:24.2439606Z   GIT_COMMITTER_EMAIL: 713559+Emasoft@users.noreply.github.com
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:24.2439968Z   UV_CACHE_DIR: /home/runner/work/_temp/setup-uv-cache
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:24.2440247Z ##[endgroup]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:25.1441917Z ============================= test session starts ==============================
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:25.1443114Z platform linux -- Python 3.10.18, pytest-8.4.1, pluggy-1.6.0 -- /home/runner/work/MFR/MFR/.venv/bin/python
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:25.1443803Z cachedir: .pytest_cache
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:25.1444106Z rootdir: /home/runner/work/MFR/MFR
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:25.1444454Z configfile: pyproject.toml
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:25.1444763Z plugins: anyio-4.9.0, cov-6.2.1
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:29.1373023Z collecting ... collected 213 items
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:29.1373442Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:29.1393155Z tests/test_additional_coverage.py::test_get_logger_with_existing_handlers PASSED [  0%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:29.1409681Z tests/test_additional_coverage.py::test_print_mapping_table_empty PASSED [  0%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:29.1421791Z tests/test_additional_coverage.py::test_get_operation_description_single PASSED [  1%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:29.1451143Z tests/test_additional_coverage.py::test_check_existing_transactions_exception PASSED [  1%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:29.1469933Z tests/test_additional_coverage.py::test_check_existing_transactions_all_completed PASSED [  2%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:50.2618953Z tests/test_additional_coverage.py::test_main_flow_invalid_directory_path PASSED [  2%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:50.3930227Z tests/test_additional_coverage.py::test_main_flow_directory_disappears PASSED [  3%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:50.5180623Z tests/test_additional_coverage.py::test_main_flow_directory_oserror PASSED [  3%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:50.6407970Z tests/test_additional_coverage.py::test_main_flow_invalid_mapping_path PASSED [  4%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:50.7672917Z tests/test_additional_coverage.py::test_main_flow_mapping_not_loaded PASSED [  4%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:50.8870626Z tests/test_additional_coverage.py::test_main_flow_dry_run_mode PASSED    [  5%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:51.0068667Z tests/test_additional_coverage.py::test_main_flow_empty_map_skip_content_only PASSED [  5%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:51.1476473Z tests/test_additional_coverage.py::test_main_flow_no_scan_pattern PASSED [  6%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:51.6437638Z tests/test_additional_coverage.py::test_main_flow_gitignore_read_error FAILED [  6%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:51.7729548Z tests/test_additional_coverage.py::test_main_flow_gitignore_not_found PASSED [  7%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:51.9120461Z tests/test_additional_coverage.py::test_main_flow_custom_ignore_not_found PASSED [  7%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:52.0398339Z tests/test_additional_coverage.py::test_main_flow_custom_ignore_read_error PASSED [  7%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:52.1718671Z tests/test_additional_coverage.py::test_main_flow_full_confirmation_flow PASSED [  8%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:52.3599528Z tests/test_additional_coverage.py::test_main_flow_warning_no_operations PASSED [  8%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:52.4813770Z tests/test_additional_coverage.py::test_main_flow_user_cancels_confirmation PASSED [  9%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:52.4831345Z tests/test_additional_coverage.py::test_main_cli_import_error_during_check PASSED [  9%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:52.4852820Z tests/test_additional_coverage.py::test_run_subprocess_command_not_found PASSED [ 10%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:52.4871924Z tests/test_additional_coverage.py::test_run_subprocess_command_failure PASSED [ 10%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:52.4890694Z tests/test_additional_coverage.py::test_run_subprocess_command_success PASSED [ 11%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:52.4933969Z tests/test_additional_coverage.py::test_main_cli_self_test_both_fail PASSED [ 11%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:52.6151961Z tests/test_additional_coverage.py::test_main_cli_quiet_mode PASSED       [ 12%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:52.8167387Z tests/test_additional_coverage.py::test_main_block_execution PASSED      [ 12%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:53.0193868Z tests/test_additional_coverage.py::test_main_block_exception PASSED      [ 13%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:53.0238918Z tests/test_comprehensive_coverage.py::TestGetLogger::test_get_logger_with_prefect_context PASSED [ 13%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:53.0266966Z tests/test_comprehensive_coverage.py::TestGetLogger::test_get_logger_prefect_missing_context PASSED [ 14%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:53.0283333Z tests/test_comprehensive_coverage.py::TestGetLogger::test_get_logger_no_prefect PASSED [ 14%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:53.1916874Z tests/test_comprehensive_coverage.py::TestMainFlow::test_main_flow_verbose_mode PASSED [ 15%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:53.4367118Z tests/test_comprehensive_coverage.py::TestMainFlow::test_main_flow_invalid_paths PASSED [ 15%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:53.5612574Z tests/test_comprehensive_coverage.py::TestMainFlow::test_main_flow_no_read_permission PASSED [ 15%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:53.7013766Z tests/test_comprehensive_coverage.py::TestMainFlow::test_main_flow_all_operations_skipped PASSED [ 16%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:53.8201976Z tests/test_comprehensive_coverage.py::TestMainFlow::test_main_flow_empty_directory PASSED [ 16%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:53.9450124Z tests/test_comprehensive_coverage.py::TestMainFlow::test_main_flow_invalid_mapping_file PASSED [ 17%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:54.0673799Z tests/test_comprehensive_coverage.py::TestMainFlow::test_main_flow_mapping_load_failure PASSED [ 17%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:54.1955378Z tests/test_comprehensive_coverage.py::TestMainFlow::test_main_flow_empty_mapping_continue PASSED [ 18%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:54.3243057Z tests/test_comprehensive_coverage.py::TestMainFlow::test_main_flow_empty_mapping_abort PASSED [ 18%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:54.4785718Z tests/test_comprehensive_coverage.py::TestMainFlow::test_main_flow_print_mapping_table PASSED [ 19%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:54.6259498Z tests/test_comprehensive_coverage.py::TestMainFlow::test_main_flow_with_gitignore PASSED [ 19%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:54.7687615Z tests/test_comprehensive_coverage.py::TestMainFlow::test_main_flow_custom_ignore_file PASSED [ 20%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:54.9043561Z tests/test_comprehensive_coverage.py::TestMainFlow::test_main_flow_ignore_pattern_error PASSED [ 20%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:54.9063963Z tests/test_comprehensive_coverage.py::TestFileOperations::test_log_fs_op_message_all_levels PASSED [ 21%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:54.9085429Z tests/test_comprehensive_coverage.py::TestFileOperations::test_log_collision_error PASSED [ 21%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:54.9396493Z tests/test_comprehensive_coverage.py::TestFileOperations::test_get_file_encoding_various_files FAILED [ 22%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:55.1086914Z tests/test_comprehensive_coverage.py::TestFileOperations::test_save_and_load_transactions FAILED [ 22%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:55.1104450Z tests/test_comprehensive_coverage.py::TestFileOperations::test_update_transaction_status PASSED [ 23%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:55.1141822Z tests/test_comprehensive_coverage.py::TestFileOperations::test_walk_for_scan PASSED [ 23%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:55.1471127Z tests/test_comprehensive_coverage.py::TestScanAndExecute::test_scan_directory_with_transactions FAILED [ 23%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:55.2021649Z tests/test_comprehensive_coverage.py::TestScanAndExecute::test_scan_with_binary_file PASSED [ 24%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:55.2531685Z tests/test_comprehensive_coverage.py::TestScanAndExecute::test_scan_with_large_file FAILED [ 24%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:55.5203287Z tests/test_comprehensive_coverage.py::TestScanAndExecute::test_execute_rename_transaction FAILED [ 25%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:55.5764086Z tests/test_comprehensive_coverage.py::TestScanAndExecute::test_execute_content_line_transaction FAILED [ 25%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:55.6034720Z tests/test_comprehensive_coverage.py::TestScanAndExecute::test_execute_file_content_batch FAILED [ 26%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:55.6798959Z tests/test_comprehensive_coverage.py::TestScanAndExecute::test_process_large_file_content FAILED [ 26%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:55.7373278Z tests/test_comprehensive_coverage.py::TestScanAndExecute::test_group_and_process_file_transactions FAILED [ 27%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.2848041Z tests/test_comprehensive_coverage.py::TestScanAndExecute::test_execute_all_transactions FAILED [ 27%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.2868529Z tests/test_comprehensive_coverage.py::TestReplaceLogic::test_log_message_all_scenarios PASSED [ 28%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.2879824Z tests/test_comprehensive_coverage.py::TestReplaceLogic::test_strip_functions_edge_cases PASSED [ 28%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.3190358Z tests/test_comprehensive_coverage.py::TestReplaceLogic::test_load_replacement_map_all_errors FAILED [ 29%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.3201510Z tests/test_comprehensive_coverage.py::TestReplaceLogic::test_get_key_characters_and_size PASSED [ 29%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.3479971Z tests/test_comprehensive_coverage.py::TestReplaceLogic::test_actual_replace_callback FAILED [ 30%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.4275233Z tests/test_comprehensive_coverage.py::TestReplaceLogic::test_replace_occurrences_all_cases FAILED [ 30%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.4295426Z tests/test_comprehensive_coverage.py::TestCLIAndMain::test_subprocess_command_all_cases PASSED [ 30%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.4793309Z tests/test_comprehensive_coverage.py::TestCLIAndMain::test_main_cli_self_test FAILED [ 31%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.4844194Z tests/test_comprehensive_coverage.py::TestCLIAndMain::test_main_cli_invalid_args PASSED [ 31%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.5538648Z tests/test_comprehensive_coverage.py::TestCLIAndMain::test_main_cli_missing_dependency FAILED [ 32%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.5570353Z tests/test_comprehensive_coverage.py::TestCLIAndMain::test_main_cli_normal_execution PASSED [ 32%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.5857035Z tests/test_comprehensive_coverage.py::TestCLIAndMain::test_check_existing_transactions_comprehensive FAILED [ 33%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.5884511Z tests/test_comprehensive_coverage.py::TestCLIAndMain::test_print_mapping_table_comprehensive PASSED [ 33%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.6159867Z tests/test_comprehensive_coverage.py::TestCLIAndMain::test_get_operation_description_all_combinations FAILED [ 34%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.8139809Z tests/test_comprehensive_coverage.py::test_main_entry_exception_handling PASSED [ 34%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.8160747Z tests/test_coverage_fixes.py::test_get_logger_verbose_mode PASSED        [ 35%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.8178253Z tests/test_coverage_fixes.py::test_get_logger_missing_context_error PASSED [ 35%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.8192680Z tests/test_coverage_fixes.py::test_get_logger_import_error PASSED        [ 36%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.8205329Z tests/test_coverage_fixes.py::test_get_operation_description_combinations PASSED [ 36%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.8226181Z tests/test_coverage_fixes.py::test_check_existing_transactions PASSED    [ 37%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.8400772Z tests/test_coverage_fixes.py::test_main_flow_verbose_logging FAILED      [ 37%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.8417560Z tests/test_coverage_fixes.py::test_main_flow_directory_validation PASSED [ 38%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.8434586Z tests/test_coverage_fixes.py::test_main_flow_all_operations_skipped PASSED [ 38%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.8451720Z tests/test_coverage_fixes.py::test_main_flow_empty_directory PASSED      [ 38%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.8468823Z tests/test_coverage_fixes.py::test_main_flow_mapping_file_errors PASSED  [ 39%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.8490029Z tests/test_coverage_fixes.py::test_main_flow_map_load_critical_error PASSED [ 39%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.8513230Z tests/test_coverage_fixes.py::test_main_flow_resume_prompt PASSED        [ 40%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.8686906Z tests/test_coverage_fixes.py::test_main_flow_gitignore_loading FAILED    [ 40%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.8857195Z tests/test_coverage_fixes.py::test_main_flow_custom_ignore_file FAILED   [ 41%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.8883776Z tests/test_coverage_fixes.py::test_main_flow_ignore_pattern_error PASSED [ 41%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.8905301Z tests/test_coverage_fixes.py::test_main_flow_user_confirmation PASSED    [ 42%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.8926777Z tests/test_coverage_fixes.py::test_main_flow_no_occurrences PASSED       [ 42%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.8940802Z tests/test_coverage_fixes.py::test_run_subprocess_command_exception PASSED [ 43%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T14:59:56.8956346Z tests/test_coverage_fixes.py::test_main_cli_missing_dependency PASSED    [ 43%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:21.3057696Z tests/test_coverage_fixes.py::test_main_cli_self_test_fallback FAILED    [ 44%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:21.3068367Z tests/test_coverage_fixes.py::test_log_fs_op_message_no_logger PASSED    [ 44%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:21.3090678Z tests/test_coverage_fixes.py::test_log_collision_error_exception PASSED  [ 45%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:21.3101126Z tests/test_coverage_fixes.py::test_replace_logic_log_message_debug PASSED [ 45%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:21.3111271Z tests/test_coverage_fixes.py::test_replace_logic_log_message_no_logger PASSED [ 46%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:21.3121599Z tests/test_coverage_fixes.py::test_strip_functions_edge_cases PASSED     [ 46%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:21.3131773Z tests/test_coverage_fixes.py::test_mapping_functions_no_mapping PASSED   [ 46%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:21.3296232Z tests/test_coverage_fixes.py::test_load_replacement_map_errors FAILED    [ 47%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:21.3318883Z tests/test_coverage_fixes.py::test_main_flow_skip_scan PASSED            [ 47%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:21.3336693Z tests/test_coverage_fixes.py::test_main_flow_empty_transaction_file PASSED [ 48%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:21.3354667Z tests/test_coverage_fixes.py::test_main_flow_invalid_transaction_format PASSED [ 48%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:21.3375549Z tests/test_coverage_fixes.py::test_main_flow_empty_mapping_with_operations PASSED [ 49%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:21.3393821Z tests/test_coverage_fixes.py::test_main_flow_empty_mapping_user_abort PASSED [ 49%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:21.3415633Z tests/test_coverage_fixes.py::test_main_flow_binary_log_exists PASSED    [ 50%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:21.3436410Z tests/test_coverage_fixes.py::test_main_flow_collision_log_exists PASSED [ 50%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:23.9236594Z tests/test_coverage_fixes.py::test_main_name_guard PASSED                [ 51%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:23.9265427Z tests/test_coverage_fixes.py::test_main_cli_negative_timeout PASSED      [ 51%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:23.9294270Z tests/test_coverage_fixes.py::test_main_cli_zero_timeout PASSED          [ 52%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:23.9322202Z tests/test_coverage_fixes.py::test_main_cli_small_timeout PASSED         [ 52%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:23.9350064Z tests/test_coverage_fixes.py::test_main_cli_verbose_mode PASSED          [ 53%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:23.9374344Z tests/test_coverage_fixes.py::test_main_cli_invalid_ignore_file PASSED   [ 53%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:23.9394005Z tests/test_coverage_improvement.py::test_get_logger_verbose_mode PASSED  [ 53%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:23.9409674Z tests/test_coverage_improvement.py::test_get_logger_missing_context_error PASSED [ 54%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:24.4288734Z tests/test_coverage_improvement.py::test_get_logger_import_error FAILED  [ 54%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:24.4300611Z tests/test_coverage_improvement.py::test_get_operation_description_combinations PASSED [ 55%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:24.4451543Z tests/test_coverage_improvement.py::test_main_flow_verbose_logging FAILED [ 55%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:24.4470386Z tests/test_coverage_improvement.py::test_main_flow_directory_validation PASSED [ 56%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:24.4503893Z tests/test_coverage_improvement.py::test_main_flow_resume_prompt PASSED  [ 56%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:24.4521604Z tests/test_coverage_improvement.py::test_main_flow_all_operations_skipped PASSED [ 57%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:24.4540191Z tests/test_coverage_improvement.py::test_main_flow_empty_directory PASSED [ 57%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:24.4559434Z tests/test_coverage_improvement.py::test_main_flow_mapping_file_errors PASSED [ 58%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:24.4581541Z tests/test_coverage_improvement.py::test_main_flow_map_load_critical_error PASSED [ 58%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:24.4745750Z tests/test_coverage_improvement.py::test_main_flow_print_mapping_and_confirm FAILED [ 59%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:24.4770954Z tests/test_coverage_improvement.py::test_main_flow_empty_mapping PASSED  [ 59%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:24.4917389Z tests/test_coverage_improvement.py::test_main_flow_gitignore_loading FAILED [ 60%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:24.5056299Z tests/test_coverage_improvement.py::test_main_flow_custom_ignore_file FAILED [ 60%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:24.5082832Z tests/test_coverage_improvement.py::test_main_flow_ignore_pattern_error PASSED [ 61%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:24.5105897Z tests/test_coverage_improvement.py::test_main_flow_user_confirmation PASSED [ 61%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:24.5128549Z tests/test_coverage_improvement.py::test_main_flow_no_occurrences PASSED [ 61%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:24.5143310Z tests/test_coverage_improvement.py::test_run_subprocess_command_exception PASSED [ 62%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:24.5286887Z tests/test_coverage_improvement.py::test_main_cli_missing_dependency FAILED [ 62%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:48.0473359Z tests/test_coverage_improvement.py::test_main_cli_self_test_fallback FAILED [ 63%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:48.0484086Z tests/test_coverage_improvement.py::test_log_fs_op_message_no_logger PASSED [ 63%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:48.0507308Z tests/test_coverage_improvement.py::test_log_collision_error_exception PASSED [ 64%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:48.0634565Z tests/test_coverage_improvement.py::test_replace_logic_log_message_debug FAILED [ 64%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:48.0756521Z tests/test_coverage_improvement.py::test_replace_logic_log_message_no_logger FAILED [ 65%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:48.0777226Z tests/test_edge_cases.py::test_main_flow_directory_errors PASSED         [ 65%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:48.0793630Z tests/test_edge_cases.py::test_main_flow_all_skipped PASSED              [ 66%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:48.0804145Z tests/test_edge_cases.py::test_replace_logic_edge_cases PASSED           [ 66%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:48.0821881Z tests/test_edge_cases.py::test_file_operations_edge_cases PASSED         [ 67%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:00:48.0840950Z tests/test_edge_cases.py::test_subprocess_command PASSED                 [ 67%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.0248307Z tests/test_edge_cases.py::test_cli_self_test FAILED                      [ 68%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.0274040Z tests/test_edge_cases.py::test_invalid_cli_args PASSED                   [ 68%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.0299861Z tests/test_edge_cases.py::test_load_replacement_map_errors PASSED        [ 69%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.0318788Z tests/test_edge_cases.py::test_print_mapping_table PASSED                [ 69%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.0329041Z tests/test_edge_cases.py::test_get_operation_description PASSED          [ 69%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.0349944Z tests/test_edge_cases.py::test_check_existing_transactions PASSED        [ 70%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.0362796Z tests/test_edge_cases.py::test_log_functions PASSED                      [ 70%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.0373659Z tests/test_edge_cases.py::test_transaction_update_not_found PASSED       [ 71%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.3018855Z tests/test_final_coverage_push.py::test_log_fs_op_message_with_logger FAILED [ 71%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.3034629Z tests/test_final_coverage_push.py::test_log_fs_op_message_critical_level PASSED [ 72%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.3052871Z tests/test_final_coverage_push.py::test_get_file_encoding_empty_file PASSED [ 72%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.3070208Z tests/test_final_coverage_push.py::test_get_file_encoding_large_sample PASSED [ 73%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.3220354Z tests/test_final_coverage_push.py::test_get_file_encoding_chardet_confidence FAILED [ 73%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.3241735Z tests/test_final_coverage_push.py::test_get_file_encoding_chardet_none PASSED [ 74%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.3263769Z tests/test_final_coverage_push.py::test_load_ignore_patterns_success PASSED [ 74%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.3390736Z tests/test_final_coverage_push.py::test_load_ignore_patterns_empty_file FAILED [ 75%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.3411477Z tests/test_final_coverage_push.py::test_load_ignore_patterns_io_error PASSED [ 75%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.3544222Z tests/test_final_coverage_push.py::test_save_transactions_with_backup FAILED [ 76%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.3568151Z tests/test_final_coverage_push.py::test_save_transactions_backup_error PASSED [ 76%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.3578872Z tests/test_final_coverage_push.py::test_update_transaction_status_in_list_found PASSED [ 76%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.3589230Z tests/test_final_coverage_push.py::test_update_transaction_status_with_error_message PASSED [ 77%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.3604704Z tests/test_final_coverage_push.py::test_log_message_with_module_logger PASSED [ 77%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.3619870Z tests/test_final_coverage_push.py::test_log_message_debug_with_logger PASSED [ 78%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.3630196Z tests/test_final_coverage_push.py::test_log_message_warning_level PASSED [ 78%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.3757749Z tests/test_final_coverage_push.py::test_strip_control_characters_with_controls FAILED [ 79%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.3777942Z tests/test_final_coverage_push.py::test_load_replacement_map_success PASSED [ 79%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.3797438Z tests/test_final_coverage_push.py::test_load_replacement_map_recursive_detection PASSED [ 80%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.3815586Z tests/test_final_coverage_push.py::test_load_replacement_map_json_error PASSED [ 80%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.3833128Z tests/test_final_coverage_push.py::test_load_replacement_map_not_dict PASSED [ 81%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.3853373Z tests/test_final_coverage_push.py::test_load_replacement_map_os_error PASSED [ 81%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.4044581Z tests/test_final_coverage_push.py::test_get_scan_pattern_with_mapping FAILED [ 82%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.4239033Z tests/test_final_coverage_push.py::test_replace_occurrences_basic FAILED [ 82%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.4428894Z tests/test_final_coverage_push.py::test_replace_occurrences_case_sensitive FAILED [ 83%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.4618814Z tests/test_final_coverage_push.py::test_replace_occurrences_with_diacritics FAILED [ 83%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.4760829Z tests/test_final_coverage_push.py::test_main_flow_user_declines_resume FAILED [ 84%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.4784431Z tests/test_final_coverage_push.py::test_main_flow_clear_transaction_error PASSED [ 84%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.4802725Z tests/test_final_coverage_push.py::test_main_flow_skip_scan_no_transaction_file PASSED [ 84%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.4936305Z tests/test_final_coverage_push.py::test_main_flow_resume_dry_run FAILED  [ 85%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.4957544Z tests/test_final_coverage_push.py::test_main_flow_resume_load_error PASSED [ 85%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.4978727Z tests/test_final_coverage_push.py::test_main_flow_resume_empty_transactions PASSED [ 86%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.5116519Z tests/test_final_coverage_push.py::test_main_flow_resume_check_modified_files FAILED [ 86%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.5141183Z tests/test_final_coverage_push.py::test_main_flow_resume_file_stat_error PASSED [ 87%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.5166260Z tests/test_final_coverage_push.py::test_main_flow_resume_unexpected_error PASSED [ 87%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.5736961Z tests/test_final_coverage_push.py::test_main_flow_reset_dry_run_transactions FAILED [ 88%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.5765843Z tests/test_final_coverage_push.py::test_cli_small_timeout_warning PASSED [ 88%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.7043998Z tests/test_final_fixes.py::test_main_flow_gitignore_loading_fixed PASSED [ 89%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.8336579Z tests/test_final_fixes.py::test_main_flow_custom_ignore_file_fixed PASSED [ 89%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.8350903Z tests/test_final_fixes.py::test_get_logger_import_error_fixed PASSED     [ 90%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.8379835Z tests/test_final_fixes.py::test_main_cli_missing_dependency_fixed PASSED [ 90%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.8406522Z tests/test_final_fixes.py::test_replace_logic_log_message_debug_fixed PASSED [ 91%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.8417238Z tests/test_final_fixes.py::test_replace_logic_log_message_no_logger_fixed PASSED [ 91%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.8457948Z tests/test_final_fixes.py::test_check_existing_transactions_json_decode_error_fixed PASSED [ 92%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:01.9752849Z tests/test_final_fixes.py::test_validation_mode_output_fixed PASSED      [ 92%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:02.4865272Z tests/test_mass_find_replace.py::test_dry_run_behavior PASSED            [ 92%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:03.0270659Z tests/test_mass_find_replace.py::test_dry_run_virtual_paths PASSED       [ 93%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:03.4357653Z tests/test_mass_find_replace.py::test_path_resolution_after_rename PASSED [ 93%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:03.9025357Z tests/test_mass_find_replace.py::test_folder_nesting PASSED              [ 94%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:04.3346194Z tests/test_mass_find_replace.py::test_unicode_combining_chars PASSED     [ 94%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:06.0425119Z tests/test_mass_find_replace.py::test_permission_error_handling PASSED   [ 95%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:29.3869801Z tests/test_mass_find_replace.py::test_self_test_option PASSED            [ 95%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:29.8307807Z tests/test_mass_find_replace.py::test_symlink_name_processing PASSED     [ 96%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:30.2370211Z tests/test_mass_find_replace.py::test_extension_filtering PASSED         [ 96%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:30.6556324Z tests/test_mass_find_replace.py::test_rtf_processing PASSED              [ 97%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:31.1006336Z tests/test_mass_find_replace.py::test_binary_files_logging PASSED        [ 97%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:02:31.8481670Z tests/test_mass_find_replace.py::test_recursive_path_resolution PASSED   [ 98%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:01.3968267Z tests/test_mass_find_replace.py::test_gb18030_encoding PASSED            [ 98%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:01.7667107Z tests/test_mass_find_replace.py::test_collision_error_logging PASSED     [ 99%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.1447688Z tests/test_mass_find_replace.py::test_interactive_mode_collision_skip PASSED [ 99%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7641063Z tests/test_mass_find_replace.py::test_malformed_json_handling PASSED     [100%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7647930Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7648186Z =================================== FAILURES ===================================
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7648817Z _____________________ test_main_flow_gitignore_read_error ______________________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7649254Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7649645Z tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-0/test_main_flow_gitignore_read_0')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7650496Z capsys = <_pytest.capture.CaptureFixture object at 0x7fbfe7fba560>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7650931Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7651170Z     def test_main_flow_gitignore_read_error(tmp_path, capsys):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7651696Z         """Test when .gitignore cannot be read."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7652135Z         test_dir = tmp_path / "test"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7652727Z         test_dir.mkdir()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7653027Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7653309Z         # Create unreadable .gitignore
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7653720Z         gitignore = test_dir / ".gitignore"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7654165Z         gitignore.write_text("*.pyc")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7654529Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7654831Z         mapping_file = tmp_path / "mapping.json"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7655401Z         mapping_file.write_text('{"REPLACEMENT_MAPPING": {"old": "new"}}')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7655911Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7656263Z         # Mock open to raise an exception when reading .gitignore
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7656757Z         import builtins
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7657050Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7657325Z         original_open = builtins.open
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7657686Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7657961Z         def mock_open(file, *args, **kwargs):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7658402Z             if str(file).endswith(".gitignore"):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7658879Z                 raise PermissionError("Permission denied")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7659369Z             return original_open(file, *args, **kwargs)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7659771Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7660112Z         with patch("builtins.open", side_effect=mock_open):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7660941Z             with patch("mass_find_replace.file_system_operations.scan_directory_for_occurrences", return_value=[]):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7661678Z                 mfr.main_flow(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7662047Z                     directory=str(test_dir),
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7662662Z                     mapping_file=str(mapping_file),
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7663079Z                     extensions=None,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7663720Z                     exclude_dirs=[],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7664094Z                     exclude_files=[],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7664486Z                     dry_run=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7664852Z                     skip_scan=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7665214Z                     resume=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7665586Z                     force_execution=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7665990Z                     ignore_symlinks_arg=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7666398Z                     use_gitignore=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7666813Z                     custom_ignore_file_path=None,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7667255Z                     skip_file_renaming=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7667669Z                     skip_folder_renaming=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7668078Z                     skip_content=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7668467Z                     timeout_minutes=10,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7668839Z                     quiet_mode=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7669226Z                     verbose_mode=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7669614Z                     interactive_mode=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7669984Z                 )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7670255Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7670540Z             captured = capsys.readouterr()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7671100Z             # The actual message logged is "Warning: Could not read .gitignore file"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7672090Z >           assert "Warning: Could not read .gitignore file" in captured.out or "Warning: Could not read .gitignore file" in captured.err
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7674820Z E           AssertionError: assert ('Warning: Could not read .gitignore file' in '\x1b[92m✓ Found .gitignore file - exclusion patterns will be applied\x1b[0m\n' or 'Warning: Could not read .gitignore file' in '')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7677338Z E            +  where '\x1b[92m✓ Found .gitignore file - exclusion patterns will be applied\x1b[0m\n' = CaptureResult(out='\x1b[92m✓ Found .gitignore file - exclusion patterns will be applied\x1b[0m\n', err='').out
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7679106Z E            +  and   '' = CaptureResult(out='\x1b[92m✓ Found .gitignore file - exclusion patterns will be applied\x1b[0m\n', err='').err
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7679784Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7680005Z tests/test_additional_coverage.py:412: AssertionError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7680606Z ----------------------------- Captured stderr call -----------------------------
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7681446Z 14:59:51.245 | INFO    | Flow run 'deft-marten' - Beginning flow run 'deft-marten' for flow 'Mass Find Replace'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7682818Z 14:59:51.248 | INFO    | Flow run 'deft-marten' - Using .gitignore file: /tmp/pytest-of-runner/pytest-0/test_main_flow_gitignore_read_0/test/.gitignore
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7684755Z 14:59:51.249 | WARNING | Flow run 'deft-marten' - [93mWarning: Could not read .gitignore file /tmp/pytest-of-runner/pytest-0/test_main_flow_gitignore_read_0/test/.gitignore: Permission denied[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7686323Z 14:59:51.250 | INFO    | Flow run 'deft-marten' - Scanning '/tmp/pytest-of-runner/pytest-0/test_main_flow_gitignore_read_0/test'...
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7687271Z 14:59:51.251 | WARNING | Flow run 'deft-marten' - No transactions to save.
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7688508Z 14:59:51.251 | INFO    | Flow run 'deft-marten' - Scan complete. 0 transactions planned in '/tmp/pytest-of-runner/pytest-0/test_main_flow_gitignore_read_0/test/planned_transactions.json'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7689780Z 14:59:51.252 | INFO    | Flow run 'deft-marten' - No actionable occurrences found by scan.
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7690498Z 14:59:51.277 | INFO    | Flow run 'deft-marten' - Finished in state Completed()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7691155Z ------------------------------ Captured log call -------------------------------
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7692008Z INFO     prefect.flow_runs:flow_engine.py:651 Beginning flow run 'deft-marten' for flow 'Mass Find Replace'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7693446Z INFO     prefect.flow_runs:mass_find_replace.py:323 Using .gitignore file: /tmp/pytest-of-runner/pytest-0/test_main_flow_gitignore_read_0/test/.gitignore
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7695670Z WARNING  prefect.flow_runs:mass_find_replace.py:328 [93mWarning: Could not read .gitignore file /tmp/pytest-of-runner/pytest-0/test_main_flow_gitignore_read_0/test/.gitignore: Permission denied[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7697370Z INFO     prefect.flow_runs:mass_find_replace.py:390 Scanning '/tmp/pytest-of-runner/pytest-0/test_main_flow_gitignore_read_0/test'...
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7698461Z WARNING  prefect.flow_runs:file_system_operations.py:116 No transactions to save.
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7699854Z INFO     prefect.flow_runs:mass_find_replace.py:451 Scan complete. 0 transactions planned in '/tmp/pytest-of-runner/pytest-0/test_main_flow_gitignore_read_0/test/planned_transactions.json'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7701283Z INFO     prefect.flow_runs:mass_find_replace.py:453 No actionable occurrences found by scan.
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7702103Z INFO     prefect.flow_runs:flow_engine.py:724 Finished in state Completed()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7703022Z ___________ TestFileOperations.test_get_file_encoding_various_files ____________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7703496Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7703849Z self = <test_comprehensive_coverage.TestFileOperations object at 0x7fbfed0d6020>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7704702Z tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-0/test_get_file_encoding_various0')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7705636Z rtf_file = PosixPath('/tmp/pytest-of-runner/pytest-0/test_get_file_encoding_various0/test.rtf')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7706636Z binary_file = PosixPath('/tmp/pytest-of-runner/pytest-0/test_get_file_encoding_various0/test.bin')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7707370Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7707710Z     def test_get_file_encoding_various_files(self, tmp_path, rtf_file, binary_file):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7708380Z         """Test get_file_encoding with various file types."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7708839Z         # Empty file
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7709169Z         empty = tmp_path / "empty.txt"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7709564Z         empty.write_text("")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7709967Z         assert get_file_encoding(empty) == "utf-8"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7710372Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7710735Z         # RTF file - get_file_encoding returns "latin-1" for RTF files
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7711295Z >       assert get_file_encoding(rtf_file) == "latin-1"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7711784Z E       AssertionError: assert 'utf-8' == 'latin-1'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7712195Z E
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7712630Z E         - latin-1
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7712910Z E         + utf-8
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7713080Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7713317Z tests/test_comprehensive_coverage.py:695: AssertionError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7714001Z ______________ TestFileOperations.test_save_and_load_transactions ______________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7714490Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7714839Z self = <test_comprehensive_coverage.TestFileOperations object at 0x7fbfed0d7790>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7715703Z tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-0/test_save_and_load_transaction0')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7716220Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7716433Z     def test_save_and_load_transactions(self, tmp_path):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7716919Z         """Test save and load transactions."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7717366Z         trans_file = tmp_path / "trans.json"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7717959Z         transactions = [{"id": "1", "status": "PENDING"}, {"id": "2", "status": "COMPLETED"}]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7718513Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7718757Z         # Save
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7719090Z         save_transactions(transactions, trans_file)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7719532Z         assert trans_file.exists()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7719887Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7720136Z         # Load
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7720447Z         loaded = load_transactions(trans_file)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7720861Z         assert len(loaded) == 2
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7721227Z         assert loaded[0]["id"] == "1"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7721586Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7721835Z         # Load non-existent
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7722451Z         assert load_transactions(Path("/nonexistent.json")) is None
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7723114Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7723368Z         # Load invalid JSON
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7723721Z         bad_json = tmp_path / "bad.json"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7724134Z         bad_json.write_text("not json")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7724565Z         assert load_transactions(bad_json) is None
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7724974Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7725226Z         # Load non-list
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7725562Z         not_list = tmp_path / "notlist.json"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7725997Z         not_list.write_text('{"not": "list"}')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7726444Z         assert load_transactions(not_list) is None
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7726856Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7727118Z         # Save empty with warning
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7727479Z         import logging
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7727776Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7728275Z         with patch("mass_find_replace.file_system_operations._log_fs_op_message") as mock_log:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7729034Z             save_transactions([], trans_file)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7729471Z             # Check that warning was logged
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7730087Z             mock_log.assert_called_with(logging.WARNING, "No transactions to save.", None)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7730678Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7730931Z         # Save with OS error
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7731415Z         with patch("builtins.open", side_effect=OSError("No space")):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7732172Z >           save_transactions(transactions, Path("/invalid/path.json"))  # Should not crash
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7732867Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7733044Z tests/test_comprehensive_coverage.py:749:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7733687Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7734331Z src/mass_find_replace/file_system_operations.py:764: in save_transactions
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7735322Z     with open(temp_file_path, "w", encoding="utf-8") as f:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7736174Z ../../../.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/unittest/mock.py:1114: in __call__
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7736985Z     return self._mock_call(*args, **kwargs)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7737773Z ../../../.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/unittest/mock.py:1118: in _mock_call
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7738611Z     return self._execute_mock_call(*args, **kwargs)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7739103Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7739436Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7739603Z self = <MagicMock name='open' id='140462187496208'>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7740116Z args = (PosixPath('/invalid/path.tmp.c5a4b8f2'), 'w')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7740686Z kwargs = {'encoding': 'utf-8'}, effect = OSError('No space')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7741050Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7741223Z     def _execute_mock_call(self, /, *args, **kwargs):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7741809Z         # separate from _increment_mock_call so that awaited functions are
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7742716Z         # executed separately from their call, also AsyncMock overrides this method
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7743295Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7743563Z         effect = self.side_effect
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7743942Z         if effect is not None:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7744311Z             if _is_exception(effect):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7744685Z >               raise effect
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7745030Z E               OSError: No space
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7745272Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7745754Z ../../../.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/unittest/mock.py:1173: OSError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7746624Z ----------------------------- Captured stdout call -----------------------------
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7747284Z WARNING (fs_op): Transaction file not found: /nonexistent.json
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7748467Z ERROR (fs_op): Error loading transactions from /tmp/pytest-of-runner/pytest-0/test_save_and_load_transaction0/bad.json: Expecting value: line 1 column 1 (char 0)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7750006Z ERROR (fs_op): Transaction file /tmp/pytest-of-runner/pytest-0/test_save_and_load_transaction0/notlist.json does not contain a list.
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7751099Z ERROR (fs_op): Error saving transactions: No space
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7751751Z ___________ TestScanAndExecute.test_scan_directory_with_transactions ___________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7752237Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7752779Z self = <test_comprehensive_coverage.TestScanAndExecute object at 0x7fbfec8f61a0>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7753642Z temp_dir = PosixPath('/tmp/pytest-of-runner/pytest-0/test_scan_directory_with_trans0')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7754618Z mapping_file = PosixPath('/tmp/pytest-of-runner/pytest-0/test_scan_directory_with_trans0/mapping.json')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7755271Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7755571Z     def test_scan_directory_with_transactions(self, temp_dir, mapping_file):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7756184Z         """Test scan_directory_for_occurrences."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7756614Z         # Load mapping first
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7757132Z         mapping = load_replacement_map(mapping_file)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7757590Z         assert mapping is not None
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7757941Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7758188Z         # Test basic scan
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7759559Z         transactions = scan_directory_for_occurrences(root_dir=Path(temp_dir), excluded_dirs=[], excluded_files=[], file_extensions=None, ignore_symlinks=True, ignore_spec=None, skip_file_renaming=False, skip_folder_renaming=False, skip_content=False)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7761002Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7761272Z         # Should find occurrences
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7761646Z         assert len(transactions) > 0
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7762163Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7762581Z         # Test with skip flags
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7763946Z         transactions = scan_directory_for_occurrences(root_dir=Path(temp_dir), excluded_dirs=[], excluded_files=[], file_extensions=None, ignore_symlinks=True, ignore_spec=None, skip_file_renaming=True, skip_folder_renaming=True, skip_content=False)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7765389Z         # Should only have content transactions
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7765822Z         for t in transactions:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7766283Z >           assert t["type"] == TransactionType.FILE_CONTENT_LINE.value
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7766783Z E           KeyError: 'type'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7767017Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7767207Z tests/test_comprehensive_coverage.py:820: KeyError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7767839Z _________________ TestScanAndExecute.test_scan_with_large_file _________________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7768288Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7768641Z self = <test_comprehensive_coverage.TestScanAndExecute object at 0x7fbfec8f4df0>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7769476Z temp_dir = PosixPath('/tmp/pytest-of-runner/pytest-0/test_scan_with_large_file0')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7770368Z large_file = PosixPath('/tmp/pytest-of-runner/pytest-0/test_scan_with_large_file0/large.txt')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7771368Z mapping_file = PosixPath('/tmp/pytest-of-runner/pytest-0/test_scan_with_large_file0/mapping.json')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7771965Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7772255Z     def test_scan_with_large_file(self, temp_dir, large_file, mapping_file):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7772983Z         """Test scanning with large files."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7773421Z         load_replacement_map(mapping_file)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7773804Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7774076Z         # Temporarily reduce threshold
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7774560Z         original_threshold = fs_ops.LARGE_FILE_SIZE_THRESHOLD
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7775086Z         fs_ops.LARGE_FILE_SIZE_THRESHOLD = 1000  # 1KB
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7775490Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7775727Z         try:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7776821Z             transactions = scan_directory_for_occurrences(root_dir=Path(large_file.parent), excluded_dirs=[], excluded_files=[], file_extensions=None, ignore_symlinks=True, ignore_spec=None, skip_content=False)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7778053Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7778321Z             # Should handle large file
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7778979Z >           content_trans = [t for t in transactions if t["type"] == TransactionType.FILE_CONTENT_LINE.value]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7779697Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7779873Z tests/test_comprehensive_coverage.py:847:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7780347Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7780678Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7780839Z .0 = <list_iterator object at 0x7fbfe6c67be0>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7781142Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7781527Z >   content_trans = [t for t in transactions if t["type"] == TransactionType.FILE_CONTENT_LINE.value]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7782186Z E   KeyError: 'type'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7782530Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7782744Z tests/test_comprehensive_coverage.py:847: KeyError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7783383Z ______________ TestScanAndExecute.test_execute_rename_transaction ______________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7783860Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7784203Z self = <test_comprehensive_coverage.TestScanAndExecute object at 0x7fbfec8f4fd0>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7785070Z tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-0/test_execute_rename_transactio0')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7785596Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7785804Z     def test_execute_rename_transaction(self, tmp_path):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7786300Z         """Test _execute_rename_transaction."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7786712Z         # Create test file
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7787062Z         old_file = tmp_path / "old.txt"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7787460Z         old_file.write_text("content")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7787823Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7788082Z         transaction = {
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7788386Z             "id": "1",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7788745Z             "type": TransactionType.FILE_NAME.value,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7789371Z             "original_path": str(old_file),
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7789789Z             "new_path": str(tmp_path / "new.txt"),
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7790182Z         }
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7790425Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7790675Z         # Normal execution
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7791521Z >       result = _execute_rename_transaction(tx=transaction, root_dir=tmp_path, path_translation_map={}, path_cache={}, dry_run=False, logger=None)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7792461Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7792630Z tests/test_comprehensive_coverage.py:866:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7793100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7793424Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7794406Z tx = {'id': '1', 'new_path': '/tmp/pytest-of-runner/pytest-0/test_execute_rename_transactio0/new.txt', 'original_path': '/tmp/pytest-of-runner/pytest-0/test_execute_rename_transactio0/old.txt', 'type': 'FILE_NAME'}
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7795903Z root_dir = PosixPath('/tmp/pytest-of-runner/pytest-0/test_execute_rename_transactio0')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7796715Z path_translation_map = {}, path_cache = {}, dry_run = False, logger = None
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7797150Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7797299Z     def _execute_rename_transaction(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7797682Z         tx: dict[str, Any],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7798019Z         root_dir: Path,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7798368Z         path_translation_map: dict[str, str],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7798801Z         path_cache: dict[str, Path],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7799168Z         dry_run: bool,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7799491Z         logger: LoggerType = None,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7799920Z     ) -> tuple[TransactionStatus, str, bool]:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7800312Z         """
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7800642Z         Execute a rename transaction (file or folder).
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7801134Z         Returns (status, error_message, changed_bool).
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7801542Z         """
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7801846Z >       original_relative_path_str = tx["PATH"]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7802271Z E       KeyError: 'PATH'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7802612Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7802857Z src/mass_find_replace/file_system_operations.py:856: KeyError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7803570Z ___________ TestScanAndExecute.test_execute_content_line_transaction ___________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7804053Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7804398Z self = <test_comprehensive_coverage.TestScanAndExecute object at 0x7fbfec8f5180>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7805413Z tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-0/test_execute_content_line_tran0')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7805929Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7806155Z     def test_execute_content_line_transaction(self, tmp_path):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7806698Z         """Test _execute_content_line_transaction."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7807147Z         test_file = tmp_path / "test.txt"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7807651Z         test_file.write_text("Line 1\nLine 2 with OldName\nLine 3")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7808125Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7808382Z         transaction = {
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7808687Z             "id": "1",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7809071Z             "type": TransactionType.FILE_CONTENT_LINE.value,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7809539Z             "path": str(test_file),
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7809910Z             "line_number": 2,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7810278Z             "original_line": "Line 2 with OldName",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7810711Z             "new_line": "Line 2 with NewName",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7811116Z             "encoding": "utf-8",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7811459Z         }
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7811697Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7811950Z         # Normal execution
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7812916Z >       result = _execute_content_line_transaction(tx=transaction, root_dir=tmp_path, path_translation_map={}, path_cache={}, logger=None)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7813677Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7813848Z tests/test_comprehensive_coverage.py:931:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7814333Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7814665Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7814984Z tx = {'encoding': 'utf-8', 'id': '1', 'line_number': 2, 'new_line': 'Line 2 with NewName', ...}
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7815983Z root_dir = PosixPath('/tmp/pytest-of-runner/pytest-0/test_execute_content_line_tran0')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7816724Z path_translation_map = {}, path_cache = {}, logger = None
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7817098Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7817253Z     def _execute_content_line_transaction(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7817662Z         tx: dict[str, Any],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7818003Z         root_dir: Path,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7818356Z         path_translation_map: dict[str, str],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7818781Z         path_cache: dict[str, Path],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7819179Z         logger: LoggerType = None,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7819585Z     ) -> tuple[TransactionStatus, str, bool]:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7819990Z         """
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7820285Z         Execute a content line transaction.
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7820740Z         Returns (status, error_message, changed_bool).
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7821163Z         """
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7821461Z >       relative_path_str = tx["PATH"]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7821850Z E       KeyError: 'PATH'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7822068Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7822439Z src/mass_find_replace/file_system_operations.py:945: KeyError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7823142Z ______________ TestScanAndExecute.test_execute_file_content_batch ______________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7823605Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7823959Z self = <test_comprehensive_coverage.TestScanAndExecute object at 0x7fbfec8f5ff0>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7824820Z tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-0/test_execute_file_content_batc0')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7825341Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7825539Z     def test_execute_file_content_batch(self, tmp_path):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7826038Z         """Test _execute_file_content_batch."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7826463Z         test_file = tmp_path / "batch.txt"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7827018Z         test_file.write_text("OldName line 1\nOldName line 2\nOldName line 3")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7827548Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7827823Z         transactions = [
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7828356Z             {"id": "1", "line_number": 1, "original_line": "OldName line 1", "new_line": "NewName line 1"},
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7829172Z             {"id": "2", "line_number": 3, "original_line": "OldName line 3", "new_line": "NewName line 3"},
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7829752Z         ]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7829990Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7830245Z         # Normal execution
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7831189Z         completed, skipped, failed = _execute_file_content_batch(abs_filepath=test_file, transactions=transactions, logger=None)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7831987Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7832244Z >       assert completed == 2
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7832732Z E       assert 0 == 2
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7832925Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7833150Z tests/test_comprehensive_coverage.py:974: AssertionError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7833827Z ______________ TestScanAndExecute.test_process_large_file_content ______________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7834299Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7834659Z self = <test_comprehensive_coverage.TestScanAndExecute object at 0x7fbfec8f5e10>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7835523Z tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-0/test_process_large_file_conten0')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7836514Z mapping_file = PosixPath('/tmp/pytest-of-runner/pytest-0/test_process_large_file_conten0/mapping.json')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7837139Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7837417Z     def test_process_large_file_content(self, tmp_path, mapping_file):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7837996Z         """Test process_large_file_content."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7838409Z         # Create large file
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7838764Z         large_file = tmp_path / "large.txt"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7839155Z         content = []
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7839461Z         for i in range(1000):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7839853Z             content.append(f"Line {i} with OldName\n")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7840309Z         large_file.write_text("".join(content))
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7840698Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7840952Z         # Load mapping
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7841552Z         load_replacement_map(mapping_file)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7841932Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7842183Z         transactions = [
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7842619Z             {
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7842888Z                 "id": f"{i}",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7843300Z                 "type": TransactionType.FILE_CONTENT_LINE.value,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7843768Z                 "path": str(large_file),
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7844173Z                 "line_number": i + 1,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7844590Z                 "original_line": f"Line {i} with OldName",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7845047Z                 "new_line": f"Line {i} with NewName",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7845457Z                 "encoding": "utf-8",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7845824Z             }
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7846141Z             for i in range(0, 100, 10)  # Every 10th line
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7846535Z         ]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7846775Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7847014Z         # Process
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7847774Z >       process_large_file_content(txns_for_file=transactions, abs_filepath=large_file, file_encoding="utf-8", is_rtf=False, logger=None)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7848531Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7848702Z tests/test_comprehensive_coverage.py:1012:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7849180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7849863Z src/mass_find_replace/file_system_operations.py:1103: in process_large_file_content
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7850644Z     txns_sorted = sorted(txns_for_file, key=lambda tx: tx["LINE_NUMBER"])
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7851233Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7851558Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7851873Z tx = {'encoding': 'utf-8', 'id': '0', 'line_number': 1, 'new_line': 'Line 0 with NewName', ...}
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7852456Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7852739Z >   txns_sorted = sorted(txns_for_file, key=lambda tx: tx["LINE_NUMBER"])
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7853272Z E   KeyError: 'LINE_NUMBER'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7853507Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7853755Z src/mass_find_replace/file_system_operations.py:1103: KeyError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7854480Z _________ TestScanAndExecute.test_group_and_process_file_transactions __________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7854964Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7855310Z self = <test_comprehensive_coverage.TestScanAndExecute object at 0x7fbfec8f5c60>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7856167Z tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-0/test_group_and_process_file_tr0')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7856846Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7857089Z     def test_group_and_process_file_transactions(self, tmp_path):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7857650Z         """Test group_and_process_file_transactions."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7858088Z         # Create test files
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7858443Z         file1 = tmp_path / "file1.txt"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7858856Z         file1.write_text("OldName in file1")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7859265Z         file2 = tmp_path / "file2.txt"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7859669Z         file2.write_text("OldName in file2")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7860057Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7860312Z         transactions = [
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7860615Z             {
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7860880Z                 "id": "1",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7861276Z                 "type": TransactionType.FILE_CONTENT_LINE.value,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7861731Z                 "path": str(file1),
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7862101Z                 "line_number": 1,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7862643Z                 "original_line": "OldName in file1",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7863072Z                 "new_line": "NewName in file1",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7863476Z                 "encoding": "utf-8",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7863908Z                 "status": TransactionStatus.PENDING.value,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7864336Z             },
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7864604Z             {
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7864868Z                 "id": "2",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7865259Z                 "type": TransactionType.FILE_CONTENT_LINE.value,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7865711Z                 "path": str(file2),
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7866227Z                 "line_number": 1,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7866615Z                 "original_line": "OldName in file2",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7867038Z                 "new_line": "NewName in file2",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7867439Z                 "encoding": "utf-8",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7867871Z                 "status": TransactionStatus.PENDING.value,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7868295Z             },
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7868571Z         ]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7868814Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7869045Z         # Process
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7870026Z >       group_and_process_file_transactions(transactions=transactions, root_dir=tmp_path, path_translation_map={}, path_cache={}, dry_run=False, skip_content=False, logger=None)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7870980Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7871149Z tests/test_comprehensive_coverage.py:1068:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7871625Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7871952Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7872771Z transactions = [{'encoding': 'utf-8', 'id': '1', 'line_number': 1, 'new_line': 'NewName in file1', ...}, {'encoding': 'utf-8', 'id': '2', 'line_number': 1, 'new_line': 'NewName in file2', ...}]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7874007Z root_dir = PosixPath('/tmp/pytest-of-runner/pytest-0/test_group_and_process_file_tr0')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7874759Z path_translation_map = {}, path_cache = {}, dry_run = False
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7875283Z skip_content = False, logger = None
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7875546Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7875711Z     def group_and_process_file_transactions(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7876161Z         transactions: list[dict[str, Any]],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7876561Z         root_dir: Path,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7876908Z         path_translation_map: dict[str, str],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7877367Z         path_cache: dict[str, Path],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7877736Z         dry_run: bool,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7878048Z         skip_content: bool,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7878396Z         logger: LoggerType = None,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7878773Z     ) -> None:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7879180Z         """Group transactions by file and process them efficiently"""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7879724Z         # Group transactions by file path
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7880121Z         file_groups = {}
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7880453Z         for tx in transactions:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7880889Z >           if tx["TYPE"] != TransactionType.FILE_CONTENT_LINE.value:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7881527Z E           KeyError: 'TYPE'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7881756Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7882006Z src/mass_find_replace/file_system_operations.py:1246: KeyError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7882916Z _______________ TestScanAndExecute.test_execute_all_transactions _______________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7883379Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7883722Z self = <test_comprehensive_coverage.TestScanAndExecute object at 0x7fbfec8f6d70>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7884583Z tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-0/test_execute_all_transactions0')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7885672Z transaction_file = PosixPath('/tmp/pytest-of-runner/pytest-0/test_execute_all_transactions0/planned_transactions.json')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7886406Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7886694Z     def test_execute_all_transactions(self, tmp_path, transaction_file):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7887264Z         """Test execute_all_transactions."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7887688Z         # Create files for transactions
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7888126Z         (tmp_path / "old.txt").write_text("content")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7888567Z         (tmp_path / "old_dir").mkdir()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7888999Z         (tmp_path / "file.txt").write_text("old text")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7889409Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7889672Z         # Load transactions
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7890079Z         transactions = load_transactions(transaction_file)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7890521Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7890809Z         # Mock user input for interactive mode
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7891278Z         with patch("builtins.input", return_value="y"):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7892963Z >           result = execute_all_transactions(transactions_file_path=transaction_file, root_dir=tmp_path, dry_run=False, resume=False, timeout_minutes=10, skip_file_renaming=False, skip_folder_renaming=False, skip_content=False, interactive_mode=True, logger=None)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7894519Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7894696Z tests/test_comprehensive_coverage.py:1096:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7895173Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7895796Z .venv/lib/python3.10/site-packages/prefect/flows.py:1691: in __call__
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7896339Z     return run_flow(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7896841Z .venv/lib/python3.10/site-packages/prefect/flow_engine.py:1527: in run_flow
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7897437Z     ret_val = run_flow_sync(**kwargs)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7898049Z .venv/lib/python3.10/site-packages/prefect/flow_engine.py:1372: in run_flow_sync
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7898805Z     return engine.state if return_type == "state" else engine.result()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7899522Z .venv/lib/python3.10/site-packages/prefect/flow_engine.py:350: in result
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7900093Z     raise self._raised
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7900609Z .venv/lib/python3.10/site-packages/prefect/flow_engine.py:763: in run_context
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7901183Z     yield self
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7901686Z .venv/lib/python3.10/site-packages/prefect/flow_engine.py:1370: in run_flow_sync
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7902635Z     engine.call_flow_fn()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7903200Z .venv/lib/python3.10/site-packages/prefect/flow_engine.py:783: in call_flow_fn
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7903925Z     result = call_with_parameters(self.flow.fn, self.parameters)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7904749Z .venv/lib/python3.10/site-packages/prefect/utilities/callables.py:210: in call_with_parameters
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7905477Z     return fn(*args, **kwargs)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7905887Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7906214Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7906829Z transactions_file_path = PosixPath('/tmp/pytest-of-runner/pytest-0/test_execute_all_transactions0/planned_transactions.json')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7907959Z root_dir = PosixPath('/tmp/pytest-of-runner/pytest-0/test_execute_all_transactions0')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7908662Z dry_run = False, resume = False, timeout_minutes = 10
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7909301Z skip_file_renaming = False, skip_folder_renaming = False, skip_content = False
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7909899Z interactive_mode = True, logger = None
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7910342Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7910501Z     @flow(name="execute-all-transactions")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7910926Z     def execute_all_transactions(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7911323Z         transactions_file_path: Path,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7911705Z         root_dir: Path,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7912017Z         dry_run: bool,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7912452Z         resume: bool,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7912764Z         timeout_minutes: int,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7913122Z         skip_file_renaming: bool,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7913501Z         skip_folder_renaming: bool,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7913881Z         skip_content: bool,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7914231Z         interactive_mode: bool,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7914598Z         logger: LoggerType = None,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7914966Z     ) -> dict[str, int]:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7915275Z         """
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7915615Z         Execute all transactions in the transaction file.
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7916085Z         Returns statistics dictionary.
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7916463Z         """
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7916719Z         import time
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7916996Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7917303Z         # Use timeout_minutes to control retry duration
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7917878Z         MAX_RETRY_PASSES = 1000000  # Large number to allow timeout control
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7918416Z         start_time = time.time()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7918935Z         timeout_seconds = timeout_minutes * 60 if timeout_minutes > 0 else None
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7919474Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7919910Z         transactions = load_transactions(transactions_file_path, logger=logger)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7920642Z         if transactions is None:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7920996Z             if logger:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7921361Z                 logger.error("No transactions to execute.")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7921795Z             return {}
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7922072Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7922445Z         stats = {
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7922755Z             "total": len(transactions),
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7923151Z             "completed": 0,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7923477Z             "failed": 0,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7923794Z             "skipped": 0,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7924119Z             "retry_later": 0,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7924443Z         }
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7924688Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7924997Z         # Shared path translation for rename operations
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7925479Z         path_translation_map: dict[str, str] = {}
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7925932Z         path_cache: dict[str, Path] = {}
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7926303Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7926736Z         # Track which transactions we've seen to prevent duplicate processing
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7927297Z         if not dry_run and resume:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7927675Z             for tx in transactions:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7928340Z                 if tx["STATUS"] == TransactionStatus.COMPLETED.value and tx.get("ERROR_MESSAGE") == "DRY_RUN":
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7929103Z                     tx["STATUS"] = TransactionStatus.PENDING.value
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7929603Z                     tx.pop("ERROR_MESSAGE", None)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7930125Z         seen_transaction_ids = set([tx["id"] for tx in transactions])
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7930614Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7930939Z         # If resuming, reset statuses that need processing
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7931371Z         if resume:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7931674Z             reset_transactions = []
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7932050Z             for tx in transactions:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7932555Z                 if tx["STATUS"] in [
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7932977Z                     TransactionStatus.FAILED.value,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7933454Z                     TransactionStatus.RETRY_LATER.value,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7933866Z                 ]:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7934226Z                     tx["STATUS"] = TransactionStatus.PENDING.value
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7934713Z                     tx.pop("ERROR_MESSAGE", None)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7935154Z                     reset_transactions.append(tx)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7935740Z             if reset_transactions and logger:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7936365Z                 logger.info(f"Reset {len(reset_transactions)} transactions to PENDING for retry.")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7936962Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7937215Z         finished = False
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7937529Z         pass_count = 0
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7937931Z         while not finished and pass_count < MAX_RETRY_PASSES:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7938399Z             pass_count += 1
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7938757Z             items_still_requiring_retry = []
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7939340Z             for tx_item in [tx for tx in transactions if tx["id"] in seen_transaction_ids]:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7939914Z                 tx_id = tx_item["id"]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7940296Z >               tx_type = tx_item["TYPE"]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7940695Z E               KeyError: 'TYPE'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7940940Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7941188Z src/mass_find_replace/file_system_operations.py:1375: KeyError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7941844Z ----------------------------- Captured stderr call -----------------------------
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7942874Z 14:59:55.832 | INFO    | Flow run 'fearless-macaw' - Beginning flow run 'fearless-macaw' for flow 'execute-all-transactions'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7944037Z 14:59:55.833 | DEBUG   | Flow run 'fearless-macaw' - Executing flow 'execute-all-transactions' for flow run 'fearless-macaw'...
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7945127Z 14:59:55.835 | ERROR   | Flow run 'fearless-macaw' - Encountered exception during execution: KeyError('TYPE')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7946000Z Traceback (most recent call last):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7954806Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/prefect/flow_engine.py", line 763, in run_context
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7955731Z     yield self
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7956585Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/prefect/flow_engine.py", line 1370, in run_flow_sync
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7957442Z     engine.call_flow_fn()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7958278Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/prefect/flow_engine.py", line 783, in call_flow_fn
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7959215Z     result = call_with_parameters(self.flow.fn, self.parameters)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7960329Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/prefect/utilities/callables.py", line 210, in call_with_parameters
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7961285Z     return fn(*args, **kwargs)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7962171Z   File "/home/runner/work/MFR/MFR/src/mass_find_replace/file_system_operations.py", line 1375, in execute_all_transactions
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7963220Z     tx_type = tx_item["TYPE"]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7963561Z KeyError: 'TYPE'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7964271Z 14:59:55.862 | INFO    | Flow run 'fearless-macaw' - Finished in state Failed("Flow run encountered an exception: KeyError: 'TYPE'")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7965184Z ------------------------------ Captured log call -------------------------------
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7966112Z INFO     prefect.flow_runs:flow_engine.py:651 Beginning flow run 'fearless-macaw' for flow 'execute-all-transactions'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7967289Z DEBUG    prefect.flow_runs:flow_engine.py:760 Executing flow 'execute-all-transactions' for flow run 'fearless-macaw'...
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7968393Z ERROR    prefect.flow_runs:flow_engine.py:767 Encountered exception during execution: KeyError('TYPE')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7969112Z Traceback (most recent call last):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7969970Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/prefect/flow_engine.py", line 763, in run_context
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7970788Z     yield self
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7971567Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/prefect/flow_engine.py", line 1370, in run_flow_sync
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7972557Z     engine.call_flow_fn()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7973361Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/prefect/flow_engine.py", line 783, in call_flow_fn
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7974509Z     result = call_with_parameters(self.flow.fn, self.parameters)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7975611Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/prefect/utilities/callables.py", line 210, in call_with_parameters
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7976564Z     return fn(*args, **kwargs)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7977499Z   File "/home/runner/work/MFR/MFR/src/mass_find_replace/file_system_operations.py", line 1375, in execute_all_transactions
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7978344Z     tx_type = tx_item["TYPE"]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7978694Z KeyError: 'TYPE'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7979413Z INFO     prefect.flow_runs:flow_engine.py:724 Finished in state Failed("Flow run encountered an exception: KeyError: 'TYPE'")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7980406Z ____________ TestReplaceLogic.test_load_replacement_map_all_errors _____________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7980873Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7981207Z self = <test_comprehensive_coverage.TestReplaceLogic object at 0x7fbfed0d7850>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7982051Z tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-0/test_load_replacement_map_all_0')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7982719Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7982942Z     def test_load_replacement_map_all_errors(self, tmp_path):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7983505Z         """Test all error scenarios in load_replacement_map."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7983963Z         # File not found
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7984406Z         result = load_replacement_map(Path("/nonexistent/map.json"))
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7984970Z         assert result is False  # Returns False on error
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7985387Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7985636Z         # Read error
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7986236Z         with patch("builtins.open", side_effect=Exception("Read error")):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7986847Z             result = load_replacement_map(Path("some_file.json"))
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7987325Z             assert result is False
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7987673Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7987921Z         # Invalid JSON
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7988242Z         bad_json = tmp_path / "bad.json"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7988658Z         bad_json.write_text("not json")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7989079Z         result = load_replacement_map(bad_json)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7989496Z         assert result is False
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7989825Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7990108Z         # Missing REPLACEMENT_MAPPING key
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7990529Z         wrong_key = tmp_path / "wrong_key.json"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7990962Z         wrong_key.write_text('{"wrong": {}}')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7991400Z         result = load_replacement_map(wrong_key)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7991810Z         assert result is False
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7992143Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7992586Z         # REPLACEMENT_MAPPING not a dict
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7993010Z         not_dict = tmp_path / "not_dict.json"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7993505Z         not_dict.write_text('{"REPLACEMENT_MAPPING": "string"}')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7994019Z         result = load_replacement_map(not_dict)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7994439Z         assert result is False
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7994766Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7995036Z         # Invalid key-value pairs
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7995478Z         # We need to mock json.load to return non-string types
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7995959Z         with patch("json.load") as mock_load:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7996378Z             mock_load.return_value = {
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7996780Z                 "REPLACEMENT_MAPPING": {
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7997186Z                     "valid": "replacement",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7997600Z                     123: "invalid_key",  # Non-string key
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7998053Z                     "invalid_value": 456,  # Non-string value
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7998466Z                 }
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7998729Z             }
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7999032Z             valid_map = tmp_path / "mixed.json"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7999452Z             valid_map.write_text("{}")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.7999870Z             result = load_replacement_map(valid_map)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8000316Z             # Should load only valid pairs
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8000909Z >           assert result == {"valid": "replacement"}
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8001439Z E           AssertionError: assert True == {'valid': 'replacement'}
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8001810Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8002037Z tests/test_comprehensive_coverage.py:1220: AssertionError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8002792Z ----------------------------- Captured stderr call -----------------------------
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8003455Z ERROR: Replacement mapping file not found: /nonexistent/map.json
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8004136Z ERROR: Could not read replacement mapping file some_file.json: Read error
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8004952Z ERROR: Invalid JSON in replacement mapping file: Expecting value: line 1 column 1 (char 0)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8006132Z ERROR: 'REPLACEMENT_MAPPING' key not found or not a dictionary in /tmp/pytest-of-runner/pytest-0/test_load_replacement_map_all_0/wrong_key.json
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8007583Z ERROR: 'REPLACEMENT_MAPPING' key not found or not a dictionary in /tmp/pytest-of-runner/pytest-0/test_load_replacement_map_all_0/not_dict.json
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8008688Z WARNING: Skipping invalid key-value pair (must be strings): 123:invalid_key
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8009473Z WARNING: Skipping invalid key-value pair (must be strings): invalid_value:456
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8010239Z ________________ TestReplaceLogic.test_actual_replace_callback _________________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8010693Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8011028Z self = <test_comprehensive_coverage.TestReplaceLogic object at 0x7fbfed0d7d00>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8011532Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8011689Z     def test_actual_replace_callback(self):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8012448Z         """Test _actual_replace_callback."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8012911Z         import mass_find_replace.replace_logic as rl
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8013323Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8013578Z         # Set up mapping
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8014088Z         rl._RAW_REPLACEMENT_MAPPING = {"oldname": "NewName", "test": "replacement"}
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8014642Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8014907Z         # Mock match object
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8015237Z         match = Mock()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8015576Z         match.group.return_value = "OldName"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8015951Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8016224Z         # Found match (canonicalized)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8016649Z         result = _actual_replace_callback(match)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8017071Z >       assert result == "NewName"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8017502Z E       AssertionError: assert 'OldName' == 'NewName'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8017924Z E
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8018183Z E         - NewName
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8018478Z E         + OldName
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8018657Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8018886Z tests/test_comprehensive_coverage.py:1308: AssertionError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8019499Z ----------------------------- Captured stderr call -----------------------------
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8021028Z WARNING: REPLACE_LOGIC_WARN_CALLBACK_LOOKUP_FAILED: lookup_key 'OldName' (ords=[79, 108, 100, 78, 97, 109, 101]) derived from matched_text_from_input 'OldName' (ords=[79, 108, 100, 78, 97, 109, 101]) NOT FOUND in _RAW_REPLACEMENT_MAPPING (size: 2). Returning original matched text.
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8022778Z _____________ TestReplaceLogic.test_replace_occurrences_all_cases ______________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8023252Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8023581Z self = <test_comprehensive_coverage.TestReplaceLogic object at 0x7fbfec8f6bc0>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8024060Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8024248Z     def test_replace_occurrences_all_cases(self):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8024739Z         """Test replace_occurrences in all scenarios."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8025254Z         import mass_find_replace.replace_logic as rl
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8025675Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8025931Z         # Test with debug mode
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8026318Z         original_debug = rl._DEBUG_REPLACE_LOGIC
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8026751Z         rl._DEBUG_REPLACE_LOGIC = True
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8027220Z         rl._RAW_REPLACEMENT_MAPPING = {"test": "replacement"}
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8027793Z         rl._COMPILED_PATTERN_FOR_ACTUAL_REPLACE = re.compile("test")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8028444Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8028686Z         try:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8029151Z             with patch("mass_find_replace.replace_logic._MODULE_LOGGER") as mock_logger:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8029792Z                 result = replace_occurrences("test string")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8030265Z                 mock_logger.debug.assert_called()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8030690Z         finally:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8031013Z             rl._DEBUG_REPLACE_LOGIC = original_debug
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8031411Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8031675Z         # Non-string input
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8032032Z         assert replace_occurrences(123) == 123
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8032615Z         assert replace_occurrences(None) is None
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8033007Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8033255Z         # No mapping loaded
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8033601Z         rl._MAPPING_LOADED = False
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8034162Z         with patch("mass_find_replace.replace_logic._MODULE_LOGGER") as mock_logger:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8034780Z             result = replace_occurrences("test")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8035195Z             assert result == "test"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8035743Z >           mock_logger.warning.assert_called_with("No replacement map loaded.")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8036183Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8036352Z tests/test_comprehensive_coverage.py:1343:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8036818Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8037149Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8037405Z self = <MagicMock name='_MODULE_LOGGER.warning' id='140462147030560'>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8038140Z args = ('No replacement map loaded.',), kwargs = {}
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8038734Z expected = "warning('No replacement map loaded.')", actual = 'not called.'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8039645Z error_message = "expected call not found.\nExpected: warning('No replacement map loaded.')\nActual: not called."
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8040287Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8040477Z     def assert_called_with(self, /, *args, **kwargs):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8041043Z         """assert that the last call was made with the specified arguments.
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8041535Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8041950Z         Raises an AssertionError if the args and keyword args passed in are
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8042743Z         different to the last call to the mock."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8043179Z         if self.call_args is None:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8043648Z             expected = self._format_mock_call_signature(args, kwargs)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8044145Z             actual = 'not called.'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8044664Z             error_message = ('expected call not found.\nExpected: %s\nActual: %s'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8045211Z                     % (expected, actual))
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8045629Z >           raise AssertionError(error_message)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8046088Z E           AssertionError: expected call not found.
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8046586Z E           Expected: warning('No replacement map loaded.')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8047051Z E           Actual: not called.
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8047285Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8047800Z ../../../.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/unittest/mock.py:920: AssertionError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8048712Z ----------------------------- Captured stderr call -----------------------------
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8049616Z RL_DBG_STDERR: REPLACE_OCC_ENTRY: input='test string...', _MAPPING_LOADED=True, pattern_is_set=True, map_is_populated=True
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8050656Z RL_DBG_STDERR: DEBUG_REPLACE_OCCURRENCES: Input (original): 'test string', Search found: YES
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8051646Z RL_DBG_STDERR: DEBUG_REPLACE_OCCURRENCES: Search match object: <re.Match object; span=(0, 4), match='test'>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8053422Z RL_DBG_STDERR: DEBUG_CALLBACK: Matched segment (original from input)='test'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8054193Z RL_DBG_STDERR:   Canonicalized lookup_key='test' (len 4, ords=[116, 101, 115, 116])
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8054978Z RL_DBG_STDERR:   _RAW_REPLACEMENT_MAPPING at callback (first 5 keys): ['test']...
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8055843Z RL_DBG_STDERR:   Found in map. Replacing with: 'replacement'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8056557Z RL_DBG_STDERR: DEBUG_REPLACE_OCCURRENCES: Result after replacement: 'replacement string'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8057353Z ____________________ TestCLIAndMain.test_main_cli_self_test ____________________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8057789Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8058112Z self = <test_comprehensive_coverage.TestCLIAndMain object at 0x7fbfec8f4f10>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8058879Z monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7fbfe6c499f0>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8059345Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8059523Z     def test_main_cli_self_test(self, monkeypatch):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8060010Z         """Test main_cli with --self-test option."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8060427Z         # Success case
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8060858Z         monkeypatch.setattr("sys.argv", ["mfr", "--self-test"])
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8061616Z         with patch("mass_find_replace.mass_find_replace._run_subprocess_command", return_value=True):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8062448Z >           assert main_cli() == 0
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8062707Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8062877Z tests/test_comprehensive_coverage.py:1390:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8063341Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8063672Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8063797Z     def main_cli() -> None:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8064198Z         """Main CLI entry point for mass find replace."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8064628Z         import sys
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8065093Z         import importlib.util
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8085905Z         import argparse
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8086433Z         # Imports moved to top of file
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8086881Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8087195Z         # Check required dependencies
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8087727Z         required_deps = [("prefect", "prefect"), ("chardet", "chardet")]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8088320Z         for module_name, display_name in required_deps:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8088775Z             try:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8089160Z                 if importlib.util.find_spec(module_name) is None:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8090224Z                     sys.stderr.write(f"{RED}CRITICAL ERROR: Missing core dependency: {display_name}. Please install all required packages (e.g., via 'uv sync').{RESET}\n")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8091235Z                     sys.exit(1)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8091620Z             except ImportError:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8092769Z                 sys.stderr.write(f"{RED}CRITICAL ERROR: Missing core dependency: {display_name} (import error during check). Please install all required packages.{RESET}\n")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8093828Z                 sys.exit(1)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8094156Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8094473Z         parser = argparse.ArgumentParser(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8095317Z             description=f"{SCRIPT_NAME}\nFind and replace strings in files and filenames/foldernames within a project directory. "
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8096363Z             "It operates in three phases: Scan, Plan (creating a transaction log), and Execute. "
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8097256Z             "The process is designed to be resumable and aims for surgical precision in replacements. "
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8098258Z             f"Binary file content is NOT modified; matches within them are logged to '{BINARY_MATCHES_LOG_FILE}'.",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8099063Z             formatter_class=argparse.RawTextHelpFormatter,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8099523Z         )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8099814Z         parser.add_argument(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8100178Z             "directory",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8100493Z             nargs="?",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8100808Z             default=".",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8101280Z             help="Root directory to process (default: current directory).",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8101791Z         )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8102087Z         parser.add_argument(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8102724Z             "--mapping-file",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8103392Z             default=DEFAULT_REPLACEMENT_MAPPING_FILE,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8104385Z             help=f"Path to the JSON file with replacement mappings (default: ./{DEFAULT_REPLACEMENT_MAPPING_FILE}).",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8108867Z         )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8109166Z         parser.add_argument(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8109520Z             "--extensions",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8109852Z             nargs="+",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8110589Z             help="List of file extensions for content scan (e.g. .py .txt .rtf). Default: attempts to process recognized text-like files.",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8111384Z         )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8111657Z         parser.add_argument(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8112001Z             "--exclude-dirs",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8112619Z             nargs="+",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8113074Z             default=[".git", ".venv", "venv", "node_modules", "__pycache__"],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8113788Z             help="Directory names to exclude (space-separated). Default: .git .venv etc.",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8114400Z         )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8114667Z         parser.add_argument(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8115009Z             "--exclude-files",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8115336Z             nargs="+",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8115631Z             default=[],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8116153Z             help="Specific files or relative paths to exclude (space-separated).",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8116720Z         )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8116956Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8117359Z         ignore_group = parser.add_argument_group("Ignore File Options")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8117897Z         ignore_group.add_argument(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8118462Z             "--no-gitignore",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8118804Z             action="store_false",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8119160Z             dest="use_gitignore",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8119506Z             default=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8120123Z             help="Disable using .gitignore file for exclusions. Custom ignore files will also be skipped.",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8120780Z         )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8121061Z         ignore_group.add_argument(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8121423Z             "--ignore-file",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8121767Z             dest="custom_ignore_file",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8122145Z             metavar="PATH",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8122801Z             help="Path to a custom .gitignore-style file for additional exclusions.",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8123342Z         )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8123577Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8123962Z         symlink_group = parser.add_argument_group("Symlink Handling")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8124488Z         symlink_group.add_argument(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8124910Z             "--process-symlink-names",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8125305Z             action="store_true",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8126436Z             help="If set, symlink names WILL BE PROCESSED for renaming. Default: symlink names are NOT processed for renaming. Symlink targets are never followed for content modification by this script.",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8127592Z         )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8127845Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8128245Z         skip_group = parser.add_argument_group("Skip Operation Options")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8128784Z         skip_group.add_argument(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8129155Z             "--skip-file-renaming",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8129533Z             action="store_true",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8129938Z             help="Skip all file renaming operations.",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8130341Z         )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8130619Z         skip_group.add_argument(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8130995Z             "--skip-folder-renaming",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8131385Z             action="store_true",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8131800Z             help="Skip all folder renaming operations.",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8132219Z         )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8132657Z         skip_group.add_argument(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8133007Z             "--skip-content",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8133353Z             action="store_true",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8134155Z             help="Skip all file content modifications. If all three --skip-* options are used, the script will exit with 'nothing to do'.",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8135122Z         )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8135374Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8135784Z         execution_group = parser.add_argument_group("Execution Control")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8136338Z         execution_group.add_argument(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8136720Z             "--dry-run",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8137045Z             action="store_true",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8137614Z             help="Scan and plan changes, but do not execute them. Reports what would be changed.",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8138208Z         )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8138498Z         execution_group.add_argument(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8138877Z             "--skip-scan",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8139202Z             action="store_true",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8139887Z             help=f"Skip scan phase; use existing '{MAIN_TRANSACTION_FILE_NAME}' in the root directory for execution.",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8140585Z         )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8140859Z         execution_group.add_argument(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8141243Z             "--resume",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8141556Z             action="store_true",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8142577Z             help="Resume operation from existing transaction file, attempting to complete pending/failed items and scan for new/modified ones.",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8143461Z         )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8143739Z         execution_group.add_argument(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8144102Z             "--force",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8144390Z             "--yes",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8144672Z             "-y",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8144965Z             action="store_true",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8145659Z             help="Force execution without confirmation prompt (use with caution).",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8146219Z         )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8146497Z         execution_group.add_argument(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8146854Z             "-i",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8147146Z             "--interactive",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8147492Z             action="store_true",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8148033Z             help="Run in interactive mode, prompting for approval before each change.",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8148592Z         )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8148864Z         parser.add_argument(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8149205Z             "--timeout",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8149511Z             type=float,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8149816Z             default=10.0,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8150143Z             metavar="MINUTES",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8151167Z             help="Maximum minutes for the retry phase when files are locked/inaccessible. Set to 0 for indefinite retries (until CTRL-C). Minimum 1 minute if not 0. Default: 10 minutes.",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8152224Z         )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8152673Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8153041Z         output_group = parser.add_argument_group("Output Control")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8153554Z         output_group.add_argument(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8153911Z             "--quiet",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8154192Z             "-q",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8154484Z             action="store_true",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8155705Z             help="Suppress initial script name print and some informational messages from direct print statements (Prefect logs are separate). Also suppresses the confirmation prompt, implying 'yes'.",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8156875Z         )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8157146Z         output_group.add_argument(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8157505Z             "--verbose",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8157825Z             action="store_true",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8158355Z             help="Enable more verbose output, setting Prefect logger to DEBUG level.",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8158913Z         )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8159167Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8159521Z         dev_group = parser.add_argument_group("Developer Options")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8160318Z         dev_group.add_argument("--self-test", action="store_true", help="Run automated tests for this script.")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8160997Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8161270Z         args = parser.parse_args()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8161609Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8162045Z         if args.self_test:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8162636Z             print(f"{BLUE}--- Running Self-Tests ---{RESET}")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8163065Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8163400Z             # Try installing with uv first, then fallback to pip
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8164049Z             install_cmd_uv = [sys.executable, "-m", "uv", "pip", "install", "-e", ".[dev]"]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8164784Z             install_cmd_pip = [sys.executable, "-m", "pip", "install", "-e", ".[dev]"]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8165306Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8165791Z             print(f"{BLUE}Attempting to install/update dev dependencies using 'uv'...{RESET}")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8166709Z             install_success = _run_subprocess_command(install_cmd_uv, "uv dev dependency installation")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8167356Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8167623Z             if not install_success:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8168211Z                 print(f"{YELLOW}'uv' command failed or not found. Attempting with 'pip'...{RESET}")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8169117Z                 install_success = _run_subprocess_command(install_cmd_pip, "pip dev dependency installation")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8169795Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8170063Z             if not install_success:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8170632Z                 print(f"{RED}Failed to install dev dependencies. Aborting self-tests.{RESET}")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8171209Z                 sys.exit(1)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8171517Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8171962Z             pytest_cmd = ["pytest", "tests/test_mass_find_replace.py"]  # Use system pytest
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8172779Z             print(f"{BLUE}Running pytest...{RESET}")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8173623Z             test_passed = _run_subprocess_command(pytest_cmd, "pytest execution")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8174202Z >           sys.exit(0 if test_passed else 1)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8174611Z E           SystemExit: 0
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8174821Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8175046Z src/mass_find_replace/mass_find_replace.py:699: SystemExit
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8175675Z ----------------------------- Captured stdout call -----------------------------
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8176495Z [94m--- Running Self-Tests ---[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8177176Z [94mAttempting to install/update dev dependencies using 'uv'...[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8177784Z [94mRunning pytest...[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8178301Z _______________ TestCLIAndMain.test_main_cli_missing_dependency ________________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8178744Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8179071Z self = <test_comprehensive_coverage.TestCLIAndMain object at 0x7fbfec8f4130>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8179844Z monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7fbfec4f8670>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8180319Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8180537Z     def test_main_cli_missing_dependency(self, monkeypatch):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8181083Z         """Test when required dependencies are missing."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8181577Z         monkeypatch.setattr("sys.argv", ["mfr", "."])
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8181991Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8182431Z         # Mock the import of a required module to fail
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8182875Z         import builtins
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8183163Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8183448Z         original_import = builtins.__import__
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8183831Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8184110Z         def mock_import(name, *args, **kwargs):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8184521Z             if name == "click":
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8184919Z                 raise ImportError("click module not found")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8185402Z             return original_import(name, *args, **kwargs)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8185818Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8186209Z         with patch("builtins.__import__", side_effect=mock_import):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8186871Z             # Clear cached module to force re-import
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8187393Z             if "mass_find_replace.mass_find_replace" in sys.modules:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8187969Z                 del sys.modules["mass_find_replace.mass_find_replace"]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8188433Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8188696Z             # The import should fail
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8189296Z >           with pytest.raises(ImportError) as exc_info:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8189791Z E           Failed: DID NOT RAISE <class 'ImportError'>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8190107Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8190296Z tests/test_comprehensive_coverage.py:1438: Failed
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8190943Z ________ TestCLIAndMain.test_check_existing_transactions_comprehensive _________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8191428Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8191750Z self = <test_comprehensive_coverage.TestCLIAndMain object at 0x7fbfec8f6860>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8192718Z tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-0/test_check_existing_transactio2')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8193381Z mock_logger = <Mock id='140462207054320'>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8193664Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8194009Z     def test_check_existing_transactions_comprehensive(self, tmp_path, mock_logger):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8194724Z         """Test _check_existing_transactions with all scenarios."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8195201Z         # No file
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8195777Z         has_existing, progress = _check_existing_transactions(Path("/nonexistent.json"), mock_logger)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8196461Z         assert not has_existing
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8196819Z         assert progress == 0
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8197141Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8197417Z         # Valid file with mixed statuses
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8197839Z         trans_file = tmp_path / "trans.json"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8198238Z         transactions = [
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8198641Z             {"status": TransactionStatus.COMPLETED.value},
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8199335Z             {"status": TransactionStatus.COMPLETED.value},
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8199839Z             {"status": TransactionStatus.PENDING.value},
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8200331Z             {"status": TransactionStatus.FAILED.value},
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8200840Z             {"status": TransactionStatus.IN_PROGRESS.value},
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8201271Z         ]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8201601Z         trans_file.write_text(json.dumps(transactions))
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8202042Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8202633Z         has_existing, progress = _check_existing_transactions(trans_file, mock_logger)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8203225Z >       assert has_existing
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8203553Z E       assert False
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8203747Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8203976Z tests/test_comprehensive_coverage.py:1473: AssertionError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8204673Z ________ TestCLIAndMain.test_get_operation_description_all_combinations ________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8205151Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8205472Z self = <test_comprehensive_coverage.TestCLIAndMain object at 0x7fbfec8f65c0>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8205967Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8206195Z     def test_get_operation_description_all_combinations(self):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8206793Z         """Test _get_operation_description with all combinations."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8207279Z         # All operations
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8207917Z         assert _get_operation_description(False, False, False) == "folder names, file names, and file contents"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8208624Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8208886Z         # Two operations
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8209449Z >       assert _get_operation_description(True, False, False) == "file names and file contents"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8210346Z E       AssertionError: assert 'folder names...file contents' == 'file names and file contents'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8210969Z E
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8211254Z E         - file names and file contents
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8211637Z E         ?  ^
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8211940Z E         + folder names and file contents
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8212471Z E         ?  ^ + +
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8212646Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8212874Z tests/test_comprehensive_coverage.py:1529: AssertionError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8213485Z ________________________ test_main_flow_verbose_logging ________________________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8213884Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8214256Z tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-0/test_main_flow_verbose_logging0')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8215227Z caplog = <_pytest.logging.LogCaptureFixture object at 0x7fbfe7f93850>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8215656Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8215856Z     def test_main_flow_verbose_logging(tmp_path, caplog):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8216367Z         """Test verbose mode logging in main_flow."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8216801Z         test_dir = tmp_path / "test"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8217169Z         test_dir.mkdir()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8217538Z         (test_dir / "file.txt").write_text("content")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8217941Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8218231Z         mapping_file = tmp_path / "mapping.json"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8218809Z         mapping_file.write_text('{"REPLACEMENT_MAPPING": {"old": "new"}}')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8219322Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8219618Z         with caplog.at_level(logging.DEBUG):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8220367Z             with patch("mass_find_replace.file_system_operations.scan_directory_for_occurrences", return_value=[]):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8221105Z                 mfr.main_flow(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8221479Z                     directory=str(test_dir),
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8221904Z                     mapping_file=str(mapping_file),
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8222489Z                     extensions=None,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8222862Z                     exclude_dirs=[],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8223224Z                     exclude_files=[],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8223597Z                     dry_run=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8223959Z                     skip_scan=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8224319Z                     resume=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8224683Z                     force_execution=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8225251Z                     ignore_symlinks_arg=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8225656Z                     use_gitignore=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8226062Z                     custom_ignore_file_path=None,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8226488Z                     skip_file_renaming=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8226905Z                     skip_folder_renaming=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8227317Z                     skip_content=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8227706Z                     timeout_minutes=10,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8228080Z                     quiet_mode=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8228451Z                     verbose_mode=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8228836Z                     interactive_mode=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8229209Z                 )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8229555Z >               assert "Verbose mode enabled" in caplog.text
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8230084Z E               AssertionError: assert 'Verbose mode enabled' in ''
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8230767Z E                +  where '' = <_pytest.logging.LogCaptureFixture object at 0x7fbfe7f93850>.text
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8231258Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8231441Z tests/test_coverage_fixes.py:115: AssertionError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8232003Z _______________________ test_main_flow_gitignore_loading _______________________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8232539Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8232904Z tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-0/test_main_flow_gitignore_loadi0')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8233434Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8233613Z     def test_main_flow_gitignore_loading(tmp_path):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8234074Z         """Test .gitignore file loading."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8234483Z         test_dir = tmp_path / "test"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8234849Z         test_dir.mkdir()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8235218Z         (test_dir / "file.txt").write_text("content")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8235626Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8235875Z         # Create .gitignore
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8236231Z         gitignore = test_dir / ".gitignore"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8236678Z         gitignore.write_text("*.pyc\n__pycache__/")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8237077Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8237371Z         mapping_file = tmp_path / "mapping.json"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8237936Z         mapping_file.write_text('{"REPLACEMENT_MAPPING": {"old": "new"}}')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8238443Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8239019Z         with patch("mass_find_replace.file_system_operations.scan_directory_for_occurrences") as mock_scan:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8239906Z             mock_scan.return_value = []
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8240304Z             result = mfr.main_flow(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8240682Z                 directory=str(test_dir),
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8241106Z                 mapping_file=str(mapping_file),
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8241519Z                 extensions=None,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8241870Z                 exclude_dirs=[],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8242221Z                 exclude_files=[],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8242806Z                 dry_run=True,  # Set dry_run=True to avoid input prompt
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8243290Z                 skip_scan=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8243634Z                 resume=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8243986Z                 force_execution=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8244382Z                 ignore_symlinks_arg=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8244773Z                 use_gitignore=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8245160Z                 custom_ignore_file_path=None,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8245573Z                 skip_file_renaming=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8245976Z                 skip_folder_renaming=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8246371Z                 skip_content=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8246737Z                 timeout_minutes=10,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8247094Z                 quiet_mode=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8247453Z                 verbose_mode=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8247826Z                 interactive_mode=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8248183Z             )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8248436Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8248590Z             # Just verify the function was called
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8248879Z >           assert mock_scan.called
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8249021Z E           AssertionError: assert False
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8249407Z E            +  where False = <MagicMock name='scan_directory_for_occurrences' id='140462143090896'>.called
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8249416Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8249591Z tests/test_coverage_fixes.py:354: AssertionError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8249843Z ______________________ test_main_flow_custom_ignore_file _______________________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8249860Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8250227Z tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-0/test_main_flow_custom_ignore_f1')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8250236Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8250418Z     def test_main_flow_custom_ignore_file(tmp_path):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8250574Z         """Test custom ignore file loading."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8250706Z         test_dir = tmp_path / "test"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8250827Z         test_dir.mkdir()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8250933Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8251088Z         # Create a file so directory is not empty
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8251260Z         (test_dir / "file.txt").write_text("content")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8251365Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8251491Z         # Create custom ignore file
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8251646Z         custom_ignore = tmp_path / ".mfrignore"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8251800Z         custom_ignore.write_text("*.tmp\ntemp/")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8251900Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8252069Z         mapping_file = tmp_path / "mapping.json"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8252524Z         mapping_file.write_text('{"REPLACEMENT_MAPPING": {"old": "new"}}')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8252629Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8253079Z         with patch("mass_find_replace.file_system_operations.scan_directory_for_occurrences") as mock_scan:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8253217Z             mock_scan.return_value = []
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8253341Z             result = mfr.main_flow(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8253480Z                 directory=str(test_dir),
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8253630Z                 mapping_file=str(mapping_file),
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8253771Z                 extensions=None,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8253892Z                 exclude_dirs=[],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8254015Z                 exclude_files=[],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8254233Z                 dry_run=True,  # Set dry_run=True to avoid input prompt
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8254356Z                 skip_scan=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8254474Z                 resume=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8254774Z                 force_execution=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8254912Z                 ignore_symlinks_arg=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8255038Z                 use_gitignore=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8255216Z                 custom_ignore_file_path=str(custom_ignore),
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8255349Z                 skip_file_renaming=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8255492Z                 skip_folder_renaming=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8255615Z                 skip_content=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8255737Z                 timeout_minutes=10,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8255863Z                 quiet_mode=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8255994Z                 verbose_mode=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8256125Z                 interactive_mode=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8256234Z             )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8256331Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8256479Z             # Just verify the function was called
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8256613Z >           assert mock_scan.called
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8256753Z E           AssertionError: assert False
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8257145Z E            +  where False = <MagicMock name='scan_directory_for_occurrences' id='140462185572592'>.called
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8257155Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8257329Z tests/test_coverage_fixes.py:399: AssertionError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8257576Z _______________________ test_main_cli_self_test_fallback _______________________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8257584Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8257903Z monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7fbfe6a3a0b0>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8257911Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8258098Z     def test_main_cli_self_test_fallback(monkeypatch):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8258408Z         """Test self-test with pip fallback."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8258629Z         monkeypatch.setattr("sys.argv", ["mfr", "--self-test"])
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8258729Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8259098Z         with patch("mass_find_replace.mass_find_replace._run_subprocess_command") as mock_run:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8259278Z             # uv fails, pip succeeds, then pytest succeeds
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8259445Z             mock_run.side_effect = [False, True, True]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8259611Z             with pytest.raises(SystemExit) as exc:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8259731Z                 mfr.main_cli()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8259874Z             assert exc.value.code == 0
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8259973Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8260101Z             # Verify pip was called
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8260247Z             calls = mock_run.call_args_list
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8260375Z >           assert len(calls) == 3
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8260493Z E           assert 0 == 3
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8260628Z E            +  where 0 = len([])
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8260637Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8260812Z tests/test_coverage_fixes.py:541: AssertionError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8261067Z ----------------------------- Captured stdout call -----------------------------
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8261330Z [94m--- Running Self-Tests ---[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8261705Z [94mAttempting to install/update dev dependencies using 'uv'...[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8262224Z [94mRunning: /home/runner/work/MFR/MFR/.venv/bin/python -m uv pip install -e .[dev][0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8262713Z [93mErrors/Warnings from uv dev dependency installation:[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8262847Z Resolved 148 packages in 708ms
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8263108Z    Building mass-find-replace @ file:///home/runner/work/MFR/MFR
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8263336Z       Built mass-find-replace @ file:///home/runner/work/MFR/MFR
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8263477Z Prepared 1 package in 243ms
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8263613Z Uninstalled 1 package in 0.45ms
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8263755Z Installed 1 package in 0.95ms
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8264035Z  ~ mass-find-replace==0.3.0a0 (from file:///home/runner/work/MFR/MFR)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8264044Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8264381Z [92muv dev dependency installation completed successfully.[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8264560Z [94mRunning pytest...[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8264867Z [94mRunning: pytest tests/test_mass_find_replace.py[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8265297Z [92mOutput from pytest execution:[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8265490Z ============================= test session starts ==============================
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8265723Z platform linux -- Python 3.10.18, pytest-8.4.1, pluggy-1.6.0
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8265862Z rootdir: /home/runner/work/MFR/MFR
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8265999Z configfile: pyproject.toml
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8266129Z plugins: anyio-4.9.0, cov-6.2.1
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8266244Z collected 16 items
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8266252Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8266550Z tests/test_mass_find_replace.py ................                         [100%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8266568Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8266745Z ============================= 16 passed in 20.09s ==============================
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8266754Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8267012Z [93mErrors/Warnings from pytest execution:[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8267132Z --- Logging error ---
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8267267Z Traceback (most recent call last):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8268018Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/prefect/logging/handlers.py", line 337, in emit
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8268219Z     self.console.print(message, soft_wrap=True)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8268745Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/rich/console.py", line 1692, in print
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8268865Z     with self:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8269392Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/rich/console.py", line 866, in __exit__
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8269532Z     self._exit_buffer()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8270082Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/rich/console.py", line 824, in _exit_buffer
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8270396Z     self._check_buffer()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8271020Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/rich/console.py", line 2033, in _check_buffer
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8271153Z     self._write_buffer()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8271703Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/rich/console.py", line 2102, in _write_buffer
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8271848Z     self.file.write(text)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8272006Z ValueError: I/O operation on closed file.
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8272114Z Call stack:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8272857Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/prefect/server/api/server.py", line 917, in stop
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8273011Z     subprocess_server_logger.info(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8273673Z   File "/home/runner/.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/logging/__init__.py", line 1477, in info
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8273826Z     self._log(INFO, msg, args, **kwargs)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8274457Z   File "/home/runner/.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/logging/__init__.py", line 1624, in _log
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8274590Z     self.handle(record)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8275237Z   File "/home/runner/.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/logging/__init__.py", line 1634, in handle
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8275392Z     self.callHandlers(record)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8276081Z   File "/home/runner/.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/logging/__init__.py", line 1696, in callHandlers
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8276213Z     hdlr.handle(record)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8276861Z   File "/home/runner/.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/logging/__init__.py", line 968, in handle
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8276990Z     self.emit(record)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8277607Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/prefect/logging/handlers.py", line 343, in emit
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8277764Z     self.handleError(record)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8278068Z Message: 'Stopping temporary server on http://127.0.0.1:8012'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8278179Z Arguments: ()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8278188Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8278489Z [92mpytest execution completed successfully.[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8278750Z _______________________ test_load_replacement_map_errors _______________________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8278912Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8279281Z tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-0/test_load_replacement_map_erro0')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8279297Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8279478Z     def test_load_replacement_map_errors(tmp_path):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8279645Z         """Test load_replacement_map error cases."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8279806Z         # File not found returns False, not None
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8280090Z         result = replace.load_replacement_map(Path("/nonexistent/map.json"))
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8280229Z         assert result is False
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8280340Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8280454Z         # Invalid JSON
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8280591Z         bad_json = tmp_path / "bad.json"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8280734Z         bad_json.write_text("not json")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8280918Z         result = replace.load_replacement_map(bad_json)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8281048Z >       assert result is None
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8281180Z E       assert False is None
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8281188Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8281365Z tests/test_coverage_fixes.py:673: AssertionError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8281616Z ----------------------------- Captured stderr call -----------------------------
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8281881Z ERROR: Replacement mapping file not found: /nonexistent/map.json
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8282260Z ERROR: Invalid JSON in replacement mapping file: Expecting value: line 1 column 1 (char 0)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8282651Z _________________________ test_get_logger_import_error _________________________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8282835Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8282980Z     def test_get_logger_import_error():
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8283171Z         """Test _get_logger when Prefect import fails."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8283298Z         # Make the import fail
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8283408Z         import sys
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8283514Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8283642Z         original_modules = {}
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8283790Z         for key in list(sys.modules.keys()):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8283948Z             if key.startswith("prefect"):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8284120Z                 original_modules[key] = sys.modules[key]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8284249Z                 del sys.modules[key]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8284357Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8284461Z         try:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8284605Z             # Clear any existing handlers
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8284814Z             test_logger = logging.getLogger("mass_find_replace")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8284957Z             test_logger.handlers.clear()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8285062Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8285235Z >           logger = mfr._get_logger(verbose_mode=True)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8285243Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8285393Z tests/test_coverage_improvement.py:57:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8285578Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8285819Z src/mass_find_replace/mass_find_replace.py:53: in _get_logger
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8285972Z     from prefect import get_run_logger
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8286187Z <frozen importlib._bootstrap>:1075: in _handle_fromlist
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8286290Z     ???
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8286613Z .venv/lib/python3.10/site-packages/prefect/__init__.py:120: in __getattr__
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8286845Z     module = importlib.import_module(mname, package=package)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8287403Z ../../../.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/importlib/__init__.py:126: in import_module
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8287667Z     return _bootstrap._gcd_import(name[level:], package, level)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8287946Z .venv/lib/python3.10/site-packages/prefect/main.py:5: in <module>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8288228Z     from prefect.flows import FlowDecorator, flow, Flow, serve, aserve
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8288504Z .venv/lib/python3.10/site-packages/prefect/flows.py:54: in <module>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8288657Z     from prefect.blocks.core import Block
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8288974Z .venv/lib/python3.10/site-packages/prefect/blocks/__init__.py:3: in <module>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8289348Z     import prefect.blocks.notifications as notifications
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8289711Z .venv/lib/python3.10/site-packages/prefect/blocks/notifications.py:10: in <module>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8290033Z     from prefect.blocks.abstract import NotificationBlock, NotificationError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8290350Z .venv/lib/python3.10/site-packages/prefect/blocks/abstract.py:20: in <module>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8290509Z     from prefect.blocks.core import Block
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8290809Z .venv/lib/python3.10/site-packages/prefect/blocks/core.py:59: in <module>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8290963Z     from prefect.events import emit_event
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8291280Z .venv/lib/python3.10/site-packages/prefect/events/__init__.py:45: in <module>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8291520Z     from .clients import get_events_client, get_events_subscriber
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8291832Z .venv/lib/python3.10/site-packages/prefect/events/clients.py:55: in <module>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8291979Z     EVENTS_EMITTED = Counter(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8292454Z .venv/lib/python3.10/site-packages/prometheus_client/metrics.py:132: in __init__
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8292595Z     registry.register(self)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8292768Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8292775Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8293114Z self = <prometheus_client.registry.CollectorRegistry object at 0x7fbfee4f4820>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8293420Z collector = prometheus_client.metrics.Counter(prefect_events_emitted)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8293428Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8293775Z     def register(self, collector: Collector) -> None:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8293941Z         """Add a collector to the registry."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8294061Z         with self._lock:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8294203Z             names = self._get_names(collector)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8294470Z             duplicates = set(self._names_to_collectors).intersection(names)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8294593Z             if duplicates:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8294726Z >               raise ValueError(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8294963Z                     'Duplicated timeseries in CollectorRegistry: {}'.format(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8295086Z                         duplicates))
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8295823Z E               ValueError: Duplicated timeseries in CollectorRegistry: {'prefect_events_emitted', 'prefect_events_emitted_created', 'prefect_events_emitted_total'}
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8295841Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8296183Z .venv/lib/python3.10/site-packages/prometheus_client/registry.py:43: ValueError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8296439Z ________________________ test_main_flow_verbose_logging ________________________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8296446Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8296815Z tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-0/test_main_flow_verbose_logging1')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8297103Z caplog = <_pytest.logging.LogCaptureFixture object at 0x7fbfd7f05090>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8297111Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8297317Z     def test_main_flow_verbose_logging(tmp_path, caplog):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8297492Z         """Test verbose mode logging in main_flow."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8297622Z         test_dir = tmp_path / "test"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8297746Z         test_dir.mkdir()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8297909Z         (test_dir / "file.txt").write_text("content")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8298008Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8298153Z         # Create a valid mapping file
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8298312Z         mapping_file = tmp_path / "mapping.json"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8298574Z         mapping_file.write_text('{"REPLACEMENT_MAPPING": {"old": "new"}}')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8298688Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8298840Z         with caplog.at_level(logging.DEBUG):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8299037Z             # Mock scan to return empty to avoid full execution
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8299505Z             with patch("mass_find_replace.file_system_operations.scan_directory_for_occurrences", return_value=[]):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8299637Z                 result = mfr.main_flow(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8299931Z                     directory=str(test_dir),
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8300082Z                     mapping_file=str(mapping_file),
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8300203Z                     extensions=None,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8300329Z                     exclude_dirs=[],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8300453Z                     exclude_files=[],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8300582Z                     dry_run=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8300704Z                     skip_scan=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8300820Z                     resume=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8300962Z                     force_execution=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8301113Z                     ignore_symlinks_arg=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8301244Z                     use_gitignore=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8301395Z                     custom_ignore_file_path=None,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8301532Z                     skip_file_renaming=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8301680Z                     skip_folder_renaming=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8301814Z                     skip_content=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8301952Z                     timeout_minutes=10,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8302077Z                     quiet_mode=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8302205Z                     verbose_mode=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8302487Z                     interactive_mode=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8302599Z                 )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8302780Z >               assert "Verbose mode enabled" in caplog.text
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8302994Z E               AssertionError: assert 'Verbose mode enabled' in ''
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8303326Z E                +  where '' = <_pytest.logging.LogCaptureFixture object at 0x7fbfd7f05090>.text
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8303491Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8303707Z tests/test_coverage_improvement.py:110: AssertionError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8303978Z ___________________ test_main_flow_print_mapping_and_confirm ___________________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8303986Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8304353Z tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-0/test_main_flow_print_mapping_a0')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8304639Z capsys = <_pytest.capture.CaptureFixture object at 0x7fbfd7fab8b0>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8304960Z monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7fbfd7fa9a80>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8304970Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8305276Z     def test_main_flow_print_mapping_and_confirm(tmp_path, capsys, monkeypatch):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8305500Z         """Test printing mapping table and user confirmation."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8305632Z         test_dir = tmp_path / "test"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8305752Z         test_dir.mkdir()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8305924Z         (test_dir / "file.txt").write_text("content")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8306033Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8306195Z         mapping_file = tmp_path / "mapping.json"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8306507Z         mapping_file.write_text('{"REPLACEMENT_MAPPING": {"OldName": "NewName"}}')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8306607Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8306729Z         # User confirms
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8306947Z         monkeypatch.setattr("builtins.input", lambda _: "y")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8307056Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8307530Z         with patch("mass_find_replace.file_system_operations.scan_directory_for_occurrences", return_value=[]):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8307651Z             mfr.main_flow(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8307790Z                 directory=str(test_dir),
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8307947Z                 mapping_file=str(mapping_file),
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8308074Z                 extensions=None,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8308195Z                 exclude_dirs=[],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8308327Z                 exclude_files=[],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8308458Z                 dry_run=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8308585Z                 skip_scan=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8308701Z                 resume=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8308834Z                 force_execution=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8308977Z                 ignore_symlinks_arg=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8309101Z                 use_gitignore=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8309243Z                 custom_ignore_file_path=None,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8309566Z                 skip_file_renaming=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8309705Z                 skip_folder_renaming=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8309832Z                 skip_content=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8309964Z                 timeout_minutes=10,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8310084Z                 quiet_mode=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8310212Z                 verbose_mode=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8310345Z                 interactive_mode=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8310452Z             )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8310558Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8310704Z             captured = capsys.readouterr()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8310864Z >           assert "OldName" in captured.out
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8311031Z E           AssertionError: assert 'OldName' in ''
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8311207Z E            +  where '' = CaptureResult(out='', err='').out
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8311216Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8311469Z tests/test_coverage_improvement.py:449: AssertionError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8311722Z _______________________ test_main_flow_gitignore_loading _______________________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8311740Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8312101Z tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-0/test_main_flow_gitignore_loadi1')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8312111Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8312432Z     def test_main_flow_gitignore_loading(tmp_path):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8312579Z         """Test .gitignore file loading."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8312708Z         test_dir = tmp_path / "test"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8312831Z         test_dir.mkdir()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8312996Z         (test_dir / "file.txt").write_text("content")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8313251Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8313373Z         # Create .gitignore
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8313511Z         gitignore = test_dir / ".gitignore"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8313680Z         gitignore.write_text("*.pyc\n__pycache__/")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8313779Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8313936Z         mapping_file = tmp_path / "mapping.json"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8314210Z         mapping_file.write_text('{"REPLACEMENT_MAPPING": {"old": "new"}}')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8314321Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8314763Z         with patch("mass_find_replace.file_system_operations.scan_directory_for_occurrences") as mock_scan:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8314906Z             mock_scan.return_value = []
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8315023Z             mfr.main_flow(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8315163Z                 directory=str(test_dir),
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8315313Z                 mapping_file=str(mapping_file),
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8315434Z                 extensions=None,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8315561Z                 exclude_dirs=[],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8315693Z                 exclude_files=[],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8315813Z                 dry_run=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8315938Z                 skip_scan=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8316059Z                 resume=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8316188Z                 force_execution=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8316329Z                 ignore_symlinks_arg=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8316461Z                 use_gitignore=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8316608Z                 custom_ignore_file_path=None,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8316743Z                 skip_file_renaming=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8316878Z                 skip_folder_renaming=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8317006Z                 skip_content=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8317127Z                 timeout_minutes=10,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8317247Z                 quiet_mode=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8317373Z                 verbose_mode=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8317504Z                 interactive_mode=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8317618Z             )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8317717Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8317883Z             # Check that ignore patterns were passed
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8318034Z >           args, kwargs = mock_scan.call_args
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8318262Z E           TypeError: cannot unpack non-iterable NoneType object
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8318271Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8318456Z tests/test_coverage_improvement.py:552: TypeError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8318867Z ______________________ test_main_flow_custom_ignore_file _______________________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8318876Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8319231Z tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-0/test_main_flow_custom_ignore_f2')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8319240Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8319422Z     def test_main_flow_custom_ignore_file(tmp_path):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8319572Z         """Test custom ignore file loading."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8319703Z         test_dir = tmp_path / "test"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8319826Z         test_dir.mkdir()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8319925Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8320065Z         # Create custom ignore file
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8320223Z         custom_ignore = tmp_path / ".mfrignore"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8320377Z         custom_ignore.write_text("*.tmp\ntemp/")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8320480Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8320635Z         mapping_file = tmp_path / "mapping.json"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8320898Z         mapping_file.write_text('{"REPLACEMENT_MAPPING": {"old": "new"}}')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8321012Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8321453Z         with patch("mass_find_replace.file_system_operations.scan_directory_for_occurrences") as mock_scan:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8321589Z             mock_scan.return_value = []
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8321713Z             mfr.main_flow(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8321848Z                 directory=str(test_dir),
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8321996Z                 mapping_file=str(mapping_file),
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8322125Z                 extensions=None,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8322246Z                 exclude_dirs=[],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8322653Z                 exclude_files=[],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8322770Z                 dry_run=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8322890Z                 skip_scan=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8323012Z                 resume=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8323142Z                 force_execution=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8323279Z                 ignore_symlinks_arg=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8323408Z                 use_gitignore=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8323589Z                 custom_ignore_file_path=str(custom_ignore),
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8323723Z                 skip_file_renaming=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8323869Z                 skip_folder_renaming=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8323992Z                 skip_content=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8324122Z                 timeout_minutes=10,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8324241Z                 quiet_mode=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8324364Z                 verbose_mode=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8324504Z                 interactive_mode=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8324605Z             )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8324711Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8324858Z >           args, kwargs = mock_scan.call_args
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8325081Z E           TypeError: cannot unpack non-iterable NoneType object
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8325090Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8325274Z tests/test_coverage_improvement.py:594: TypeError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8325533Z _______________________ test_main_cli_missing_dependency _______________________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8325549Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8325862Z monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7fbfd7f044f0>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8325871Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8326069Z     def test_main_cli_missing_dependency(monkeypatch):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8326235Z         """Test CLI when dependencies are missing."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8326406Z         monkeypatch.setattr("sys.argv", ["mfr", "."])
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8326510Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8326636Z         # Hide a required module
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8326748Z         import sys
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8326850Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8326986Z         sys.modules["click"] = None
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8327090Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8327192Z         try:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8327351Z >           with pytest.raises(SystemExit) as exc:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8327521Z E           Failed: DID NOT RAISE <class 'SystemExit'>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8327529Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8327698Z tests/test_coverage_improvement.py:721: Failed
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8328092Z ----------------------------- Captured stdout call -----------------------------
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8328570Z [94mMFR - Mass Find Replace - A script to safely rename things in your project[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8328813Z _______________________ test_main_cli_self_test_fallback _______________________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8328821Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8329133Z monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7fbfe4320fa0>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8329141Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8329322Z     def test_main_cli_self_test_fallback(monkeypatch):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8329475Z         """Test self-test with pip fallback."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8329717Z         monkeypatch.setattr("sys.argv", ["mfr", "--self-test"])
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8329817Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8330185Z         with patch("mass_find_replace.mass_find_replace._run_subprocess_command") as mock_run:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8330362Z             # uv fails, pip succeeds, then pytest succeeds
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8330522Z             mock_run.side_effect = [False, True, True]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8330690Z             with pytest.raises(SystemExit) as exc:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8330810Z                 mfr.main_cli()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8330945Z             assert exc.value.code == 0
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8331057Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8331186Z             # Verify pip was called
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8331331Z             calls = mock_run.call_args_list
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8331458Z >           assert len(calls) == 3
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8331577Z E           assert 0 == 3
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8331705Z E            +  where 0 = len([])
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8331845Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8332054Z tests/test_coverage_improvement.py:743: AssertionError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8332426Z ----------------------------- Captured stdout call -----------------------------
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8332647Z [94m--- Running Self-Tests ---[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8333019Z [94mAttempting to install/update dev dependencies using 'uv'...[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8333525Z [94mRunning: /home/runner/work/MFR/MFR/.venv/bin/python -m uv pip install -e .[dev][0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8333873Z [93mErrors/Warnings from uv dev dependency installation:[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8334006Z Resolved 148 packages in 28ms
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8334262Z    Building mass-find-replace @ file:///home/runner/work/MFR/MFR
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8334487Z       Built mass-find-replace @ file:///home/runner/work/MFR/MFR
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8334619Z Prepared 1 package in 257ms
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8334759Z Uninstalled 1 package in 0.44ms
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8334887Z Installed 1 package in 1ms
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8335166Z  ~ mass-find-replace==0.3.0a0 (from file:///home/runner/work/MFR/MFR)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8335182Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8335517Z [92muv dev dependency installation completed successfully.[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8335695Z [94mRunning pytest...[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8335993Z [94mRunning: pytest tests/test_mass_find_replace.py[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8336198Z [92mOutput from pytest execution:[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8336391Z ============================= test session starts ==============================
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8336629Z platform linux -- Python 3.10.18, pytest-8.4.1, pluggy-1.6.0
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8336767Z rootdir: /home/runner/work/MFR/MFR
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8336897Z configfile: pyproject.toml
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8337033Z plugins: anyio-4.9.0, cov-6.2.1
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8337148Z collected 16 items
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8337155Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8337451Z tests/test_mass_find_replace.py ................                         [100%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8337468Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8337642Z ============================= 16 passed in 20.12s ==============================
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8337651Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8337906Z [93mErrors/Warnings from pytest execution:[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8338035Z --- Logging error ---
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8338171Z Traceback (most recent call last):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8338796Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/prefect/logging/handlers.py", line 337, in emit
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8339150Z     self.console.print(message, soft_wrap=True)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8339666Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/rich/console.py", line 1692, in print
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8339779Z     with self:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8340293Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/rich/console.py", line 866, in __exit__
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8340430Z     self._exit_buffer()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8340966Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/rich/console.py", line 824, in _exit_buffer
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8341107Z     self._check_buffer()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8341660Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/rich/console.py", line 2033, in _check_buffer
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8341791Z     self._write_buffer()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8342481Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/rich/console.py", line 2102, in _write_buffer
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8342633Z     self.file.write(text)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8342796Z ValueError: I/O operation on closed file.
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8342904Z Call stack:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8343509Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/prefect/server/api/server.py", line 917, in stop
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8343657Z     subprocess_server_logger.info(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8344304Z   File "/home/runner/.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/logging/__init__.py", line 1477, in info
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8344455Z     self._log(INFO, msg, args, **kwargs)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8345309Z   File "/home/runner/.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/logging/__init__.py", line 1624, in _log
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8345444Z     self.handle(record)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8346094Z   File "/home/runner/.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/logging/__init__.py", line 1634, in handle
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8346243Z     self.callHandlers(record)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8346942Z   File "/home/runner/.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/logging/__init__.py", line 1696, in callHandlers
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8347076Z     hdlr.handle(record)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8347721Z   File "/home/runner/.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/logging/__init__.py", line 968, in handle
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8347844Z     self.emit(record)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8348428Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/prefect/logging/handlers.py", line 343, in emit
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8348574Z     self.handleError(record)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8348844Z Message: 'Stopping temporary server on http://127.0.0.1:8616'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8348955Z Arguments: ()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8348963Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8349233Z [92mpytest execution completed successfully.[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8349501Z _____________________ test_replace_logic_log_message_debug _____________________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8349519Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8349679Z     def test_replace_logic_log_message_debug():
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8349831Z         """Test _log_message in debug mode."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8350009Z         import mass_find_replace.replace_logic as rl
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8350107Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8350258Z         original = rl._DEBUG_REPLACE_LOGIC
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8350399Z         rl._DEBUG_REPLACE_LOGIC = True
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8350498Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8350612Z         try:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8350724Z             import io
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8350831Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8350965Z             old_stderr = sys.stderr
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8351098Z             sys.stderr = io.StringIO()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8351202Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8351425Z >           replace._log_message("Debug test", level=logging.DEBUG)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8351697Z E           TypeError: _log_message() got multiple values for argument 'level'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8351706Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8352077Z tests/test_coverage_improvement.py:808: TypeError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8352480Z ___________________ test_replace_logic_log_message_no_logger ___________________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8352492Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8352676Z     def test_replace_logic_log_message_no_logger():
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8352822Z         """Test _log_message without logger."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8352928Z         import io
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8353029Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8353153Z         old_stdout = sys.stdout
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8353275Z         old_stderr = sys.stderr
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8353377Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8353489Z         try:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8353622Z             sys.stdout = io.StringIO()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8353760Z             sys.stderr = io.StringIO()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8353860Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8354113Z >           replace._log_message("Info", level=logging.INFO, logger=None)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8354388Z E           TypeError: _log_message() got multiple values for argument 'level'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8354406Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8354587Z tests/test_coverage_improvement.py:828: TypeError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8354818Z ______________________________ test_cli_self_test ______________________________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8354827Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8354951Z     def test_cli_self_test():
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8355103Z         """Test CLI self-test functionality."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8355289Z         with patch("sys.argv", ["mfr", "--self-test"]):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8355664Z             with patch("mass_find_replace.mass_find_replace._run_subprocess_command") as mock_run:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8355972Z                 # Test successful self-test
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8356115Z                 mock_run.return_value = True
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8356279Z                 with pytest.raises(SystemExit) as exc:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8356429Z                     mass_find_replace.main_cli()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8356569Z                 assert exc.value.code == 0
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8356667Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8356806Z                 # Test pip fallback
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8357148Z                 mock_run.side_effect = [False, True, True]  # uv fails, pip succeeds, pytest succeeds
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8357319Z                 with pytest.raises(SystemExit) as exc:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8357463Z                     mass_find_replace.main_cli()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8357596Z                 assert exc.value.code == 0
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8357728Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8357844Z                 # Test all fail
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8358083Z                 mock_run.side_effect = [False, False]  # Both uv and pip fail
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8358254Z                 with pytest.raises(SystemExit) as exc:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8358395Z                     mass_find_replace.main_cli()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8358530Z >               assert exc.value.code == 1
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8358653Z E               assert 0 == 1
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8358794Z E                +  where 0 = SystemExit(0).code
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8359078Z E                +    where SystemExit(0) = <ExceptionInfo SystemExit(0) tblen=2>.value
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8359096Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8359257Z tests/test_edge_cases.py:197: AssertionError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8359506Z ----------------------------- Captured stdout call -----------------------------
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8359724Z [94m--- Running Self-Tests ---[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8360100Z [94mAttempting to install/update dev dependencies using 'uv'...[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8360596Z [94mRunning: /home/runner/work/MFR/MFR/.venv/bin/python -m uv pip install -e .[dev][0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8360946Z [93mErrors/Warnings from uv dev dependency installation:[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8361075Z Resolved 148 packages in 29ms
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8361336Z    Building mass-find-replace @ file:///home/runner/work/MFR/MFR
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8361564Z       Built mass-find-replace @ file:///home/runner/work/MFR/MFR
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8361696Z Prepared 1 package in 247ms
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8361835Z Uninstalled 1 package in 0.42ms
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8362117Z Installed 1 package in 0.94ms
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8362525Z  ~ mass-find-replace==0.3.0a0 (from file:///home/runner/work/MFR/MFR)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8362542Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8362897Z [92muv dev dependency installation completed successfully.[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8363077Z [94mRunning pytest...[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8363378Z [94mRunning: pytest tests/test_mass_find_replace.py[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8363586Z [92mOutput from pytest execution:[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8363772Z ============================= test session starts ==============================
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8364033Z platform linux -- Python 3.10.18, pytest-8.4.1, pluggy-1.6.0
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8364172Z rootdir: /home/runner/work/MFR/MFR
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8364302Z configfile: pyproject.toml
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8364438Z plugins: anyio-4.9.0, cov-6.2.1
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8364552Z collected 16 items
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8364560Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8364858Z tests/test_mass_find_replace.py ................                         [100%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8364874Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8365048Z ============================= 16 passed in 20.76s ==============================
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8365056Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8365306Z [93mErrors/Warnings from pytest execution:[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8365431Z --- Logging error ---
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8365568Z Traceback (most recent call last):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8366182Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/prefect/logging/handlers.py", line 337, in emit
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8366358Z     self.console.print(message, soft_wrap=True)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8367035Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/rich/console.py", line 1692, in print
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8367153Z     with self:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8367669Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/rich/console.py", line 866, in __exit__
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8367799Z     self._exit_buffer()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8368348Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/rich/console.py", line 824, in _exit_buffer
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8368479Z     self._check_buffer()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8369034Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/rich/console.py", line 2033, in _check_buffer
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8369165Z     self._write_buffer()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8369713Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/rich/console.py", line 2102, in _write_buffer
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8369842Z     self.file.write(text)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8370012Z ValueError: I/O operation on closed file.
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8370119Z Call stack:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8370711Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/prefect/server/api/server.py", line 917, in stop
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8370860Z     subprocess_server_logger.info(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8371509Z   File "/home/runner/.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/logging/__init__.py", line 1477, in info
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8371673Z     self._log(INFO, msg, args, **kwargs)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8372436Z   File "/home/runner/.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/logging/__init__.py", line 1624, in _log
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8372577Z     self.handle(record)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8373222Z   File "/home/runner/.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/logging/__init__.py", line 1634, in handle
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8373366Z     self.callHandlers(record)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8374056Z   File "/home/runner/.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/logging/__init__.py", line 1696, in callHandlers
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8374194Z     hdlr.handle(record)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8374831Z   File "/home/runner/.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/logging/__init__.py", line 968, in handle
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8374956Z     self.emit(record)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8375538Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/prefect/logging/handlers.py", line 343, in emit
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8375829Z     self.handleError(record)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8376096Z Message: 'Stopping temporary server on http://127.0.0.1:8549'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8376206Z Arguments: ()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8376215Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8376486Z [92mpytest execution completed successfully.[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8376691Z [94m--- Running Self-Tests ---[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8377062Z [94mAttempting to install/update dev dependencies using 'uv'...[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8377606Z [94mRunning: /home/runner/work/MFR/MFR/.venv/bin/python -m uv pip install -e .[dev][0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8377946Z [93mErrors/Warnings from uv dev dependency installation:[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8378078Z Resolved 148 packages in 31ms
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8378336Z    Building mass-find-replace @ file:///home/runner/work/MFR/MFR
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8378562Z       Built mass-find-replace @ file:///home/runner/work/MFR/MFR
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8378707Z Prepared 1 package in 237ms
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8378851Z Uninstalled 1 package in 0.45ms
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8378980Z Installed 1 package in 0.99ms
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8379257Z  ~ mass-find-replace==0.3.0a0 (from file:///home/runner/work/MFR/MFR)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8379266Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8379604Z [92muv dev dependency installation completed successfully.[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8379780Z [94mRunning pytest...[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8380077Z [94mRunning: pytest tests/test_mass_find_replace.py[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8380283Z [92mOutput from pytest execution:[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8380621Z ============================= test session starts ==============================
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8380864Z platform linux -- Python 3.10.18, pytest-8.4.1, pluggy-1.6.0
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8381005Z rootdir: /home/runner/work/MFR/MFR
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8381143Z configfile: pyproject.toml
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8381271Z plugins: anyio-4.9.0, cov-6.2.1
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8381383Z collected 16 items
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8381399Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8381695Z tests/test_mass_find_replace.py ................                         [100%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8381703Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8381880Z ============================= 16 passed in 20.28s ==============================
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8381888Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8382149Z [93mErrors/Warnings from pytest execution:[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8382275Z --- Logging error ---
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8382552Z Traceback (most recent call last):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8383155Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/prefect/logging/handlers.py", line 337, in emit
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8383342Z     self.console.print(message, soft_wrap=True)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8383855Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/rich/console.py", line 1692, in print
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8383967Z     with self:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8384484Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/rich/console.py", line 866, in __exit__
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8384627Z     self._exit_buffer()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8385168Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/rich/console.py", line 824, in _exit_buffer
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8385302Z     self._check_buffer()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8385856Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/rich/console.py", line 2033, in _check_buffer
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8385990Z     self._write_buffer()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8386537Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/rich/console.py", line 2102, in _write_buffer
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8386681Z     self.file.write(text)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8386842Z ValueError: I/O operation on closed file.
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8386949Z Call stack:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8387533Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/prefect/server/api/server.py", line 917, in stop
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8387679Z     subprocess_server_logger.info(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8388490Z   File "/home/runner/.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/logging/__init__.py", line 1477, in info
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8388635Z     self._log(INFO, msg, args, **kwargs)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8389264Z   File "/home/runner/.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/logging/__init__.py", line 1624, in _log
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8389398Z     self.handle(record)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8390046Z   File "/home/runner/.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/logging/__init__.py", line 1634, in handle
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8390198Z     self.callHandlers(record)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8390883Z   File "/home/runner/.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/logging/__init__.py", line 1696, in callHandlers
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8391014Z     hdlr.handle(record)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8391655Z   File "/home/runner/.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/logging/__init__.py", line 968, in handle
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8391785Z     self.emit(record)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8392507Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/prefect/logging/handlers.py", line 343, in emit
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8392648Z     self.handleError(record)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8392902Z Message: 'Stopping temporary server on http://127.0.0.1:8219'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8393013Z Arguments: ()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8393020Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8393289Z [92mpytest execution completed successfully.[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8393491Z [94m--- Running Self-Tests ---[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8393862Z [94mAttempting to install/update dev dependencies using 'uv'...[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8394528Z [94mRunning: /home/runner/work/MFR/MFR/.venv/bin/python -m uv pip install -e .[dev][0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8394859Z [93mErrors/Warnings from uv dev dependency installation:[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8394992Z Resolved 148 packages in 28ms
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8395247Z    Building mass-find-replace @ file:///home/runner/work/MFR/MFR
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8395481Z       Built mass-find-replace @ file:///home/runner/work/MFR/MFR
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8395612Z Prepared 1 package in 236ms
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8395752Z Uninstalled 1 package in 0.46ms
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8395882Z Installed 1 package in 0.99ms
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8396156Z  ~ mass-find-replace==0.3.0a0 (from file:///home/runner/work/MFR/MFR)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8396165Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8396501Z [92muv dev dependency installation completed successfully.[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8396681Z [94mRunning pytest...[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8396982Z [94mRunning: pytest tests/test_mass_find_replace.py[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8397196Z [92mOutput from pytest execution:[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8397388Z ============================= test session starts ==============================
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8397627Z platform linux -- Python 3.10.18, pytest-8.4.1, pluggy-1.6.0
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8397764Z rootdir: /home/runner/work/MFR/MFR
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8397901Z configfile: pyproject.toml
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8398037Z plugins: anyio-4.9.0, cov-6.2.1
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8398151Z collected 16 items
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8398159Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8398456Z tests/test_mass_find_replace.py ................                         [100%]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8398466Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8398640Z ============================= 16 passed in 20.23s ==============================
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8398649Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8398904Z [93mErrors/Warnings from pytest execution:[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8399023Z --- Logging error ---
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8399159Z Traceback (most recent call last):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8399759Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/prefect/logging/handlers.py", line 337, in emit
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8399937Z     self.console.print(message, soft_wrap=True)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8400450Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/rich/console.py", line 1692, in print
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8400563Z     with self:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8401230Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/rich/console.py", line 866, in __exit__
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8401360Z     self._exit_buffer()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8401900Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/rich/console.py", line 824, in _exit_buffer
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8402031Z     self._check_buffer()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8402725Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/rich/console.py", line 2033, in _check_buffer
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8402858Z     self._write_buffer()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8403417Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/rich/console.py", line 2102, in _write_buffer
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8403584Z     self.file.write(text)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8403751Z ValueError: I/O operation on closed file.
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8403859Z Call stack:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8404442Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/prefect/server/api/server.py", line 917, in stop
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8404597Z     subprocess_server_logger.info(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8405247Z   File "/home/runner/.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/logging/__init__.py", line 1477, in info
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8405393Z     self._log(INFO, msg, args, **kwargs)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8406025Z   File "/home/runner/.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/logging/__init__.py", line 1624, in _log
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8406157Z     self.handle(record)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8406802Z   File "/home/runner/.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/logging/__init__.py", line 1634, in handle
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8407100Z     self.callHandlers(record)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8407786Z   File "/home/runner/.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/logging/__init__.py", line 1696, in callHandlers
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8407916Z     hdlr.handle(record)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8408553Z   File "/home/runner/.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/logging/__init__.py", line 968, in handle
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8408693Z     self.emit(record)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8409258Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/prefect/logging/handlers.py", line 343, in emit
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8409392Z     self.handleError(record)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8409641Z Message: 'Stopping temporary server on http://127.0.0.1:8191'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8409752Z Arguments: ()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8409760Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8410171Z [92mpytest execution completed successfully.[0m
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8410436Z ______________________ test_log_fs_op_message_with_logger ______________________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8410445Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8410601Z     def test_log_fs_op_message_with_logger():
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8410762Z         """Test _log_fs_op_message with logger."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8410886Z         mock_logger = Mock()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8410994Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8411247Z         fs_ops._log_fs_op_message(logging.INFO, "Info message", mock_logger)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8411481Z >       mock_logger.info.assert_called_once_with("Info message")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8411490Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8411645Z tests/test_final_coverage_push.py:30:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8411822Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8411831Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8412095Z self = <Mock name='mock.info' id='140462144096192'>, args = ('Info message',)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8412508Z kwargs = {}, msg = "Expected 'info' to be called once. Called 0 times."
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8412526Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8412729Z     def assert_called_once_with(self, /, *args, **kwargs):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8412995Z         """assert that the mock was called exactly once and that that call was
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8413137Z         with the specified arguments."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8413271Z         if not self.call_count == 1:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8413496Z             msg = ("Expected '%s' to be called once. Called %s times.%s"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8413802Z                    % (self._mock_name or 'mock',
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8413930Z                       self.call_count,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8414069Z                       self._calls_repr()))
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8414204Z >           raise AssertionError(msg)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8414494Z E           AssertionError: Expected 'info' to be called once. Called 0 times.
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8414502Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8415021Z ../../../.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/unittest/mock.py:940: AssertionError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8415297Z __________________ test_get_file_encoding_chardet_confidence ___________________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8415314Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8415678Z tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-0/test_get_file_encoding_chardet0')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8415687Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8415901Z     def test_get_file_encoding_chardet_confidence(tmp_path):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8416145Z         """Test get_file_encoding when chardet has low confidence."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8416285Z         test_file = tmp_path / "test.txt"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8416420Z         # Write some ambiguous bytes
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8416582Z         test_file.write_bytes(b"\x80\x81\x82\x83")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8416684Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8416855Z         with patch("chardet.detect") as mock_detect:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8417136Z             mock_detect.return_value = {"encoding": "latin-1", "confidence": 0.1}
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8417316Z             encoding = fs_ops.get_file_encoding(test_file)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8417749Z >           assert encoding == "utf-8"  # Falls back to UTF-8 due to low confidence
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8417917Z E           AssertionError: assert 'cp1252' == 'utf-8'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8418019Z E
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8418136Z E             - utf-8
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8418245Z E             + cp1252
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8418253Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8418452Z tests/test_final_coverage_push.py:79: AssertionError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8418723Z _____________________ test_load_ignore_patterns_empty_file _____________________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8418732Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8419090Z tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-0/test_load_ignore_patterns_empt0')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8419099Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8419299Z     def test_load_ignore_patterns_empty_file(tmp_path):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8419475Z         """Test load_ignore_patterns with empty file."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8419624Z         ignore_file = tmp_path / ".gitignore"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8419774Z         ignore_file.write_text("")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8419872Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8420076Z         patterns = fs_ops.load_ignore_patterns(ignore_file)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8420212Z >       assert patterns is not None
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8420339Z E       assert None is not None
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8420348Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8420554Z tests/test_final_coverage_push.py:109: AssertionError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8420810Z ______________________ test_save_transactions_with_backup ______________________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8420826Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8421187Z tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-0/test_save_transactions_with_ba0')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8421196Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8421379Z     def test_save_transactions_with_backup(tmp_path):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8421542Z         """Test save_transactions creating backup."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8421715Z         trans_file = tmp_path / "transactions.json"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8421840Z         # Create existing file
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8421991Z         trans_file.write_text('{"old": "data"}')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8422103Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8422424Z         transactions = [{"id": "1", "status": "PENDING"}]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8422625Z         fs_ops.save_transactions(transactions, trans_file)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8422723Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8422849Z         # Check backup was created
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8423041Z         backup_file = tmp_path / "transactions.json.bak"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8423336Z >       assert backup_file.exists()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8423471Z E       AssertionError: assert False
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8423599Z E        +  where False = exists()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8424172Z E        +    where exists = PosixPath('/tmp/pytest-of-runner/pytest-0/test_save_transactions_with_ba0/transactions.json.bak').exists
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8424182Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8424385Z tests/test_final_coverage_push.py:131: AssertionError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8424656Z _________________ test_strip_control_characters_with_controls __________________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8424673Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8424858Z     def test_strip_control_characters_with_controls():
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8425127Z         """Test strip_control_characters with actual control characters."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8425277Z         # Test with various control characters
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8425423Z         text = "Hello\x00\x01\x02World\x1f\x7f"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8425611Z         result = replace.strip_control_characters(text)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8425768Z         assert result == "HelloWorld"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8425874Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8426062Z         # Test with newlines and tabs (should be preserved)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8426191Z         text2 = "Hello\nWorld\tTest"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8426394Z         result2 = replace.strip_control_characters(text2)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8426544Z >       assert result2 == "Hello\nWorld\tTest"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8426816Z E       AssertionError: assert 'HelloWorldTest' == 'Hello\nWorld\tTest'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8426924Z E
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8427186Z E         - Hello
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8427304Z E         - World	Test
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8427421Z E         ?      -
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8427541Z E         + HelloWorldTest
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8427648Z E         ? +++++
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8427655Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8427857Z tests/test_final_coverage_push.py:233: AssertionError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8428110Z ______________________ test_get_scan_pattern_with_mapping ______________________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8428126Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8428292Z     def test_get_scan_pattern_with_mapping():
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8428476Z         """Test get_scan_pattern after loading mapping."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8428615Z         # First reset and load a mapping
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8428755Z         replace.reset_module_state()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8428971Z         replace._REPLACEMENT_MAPPING = {"test": "replacement"}
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8429135Z >       replace._prepare_internal_structures()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8429618Z E       AttributeError: module 'mass_find_replace.replace_logic' has no attribute '_prepare_internal_structures'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8429636Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8429834Z tests/test_final_coverage_push.py:293: AttributeError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8430088Z ________________________ test_replace_occurrences_basic ________________________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8430097Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8430241Z     def test_replace_occurrences_basic():
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8430455Z         """Test replace_occurrences with basic replacement."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8430576Z         # Set up mapping
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8430711Z         replace.reset_module_state()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8430888Z         replace._REPLACEMENT_MAPPING = {"old": "new"}
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8431042Z >       replace._prepare_internal_structures()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8431519Z E       AttributeError: module 'mass_find_replace.replace_logic' has no attribute '_prepare_internal_structures'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8431534Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8431731Z tests/test_final_coverage_push.py:304: AttributeError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8432010Z ___________________ test_replace_occurrences_case_sensitive ____________________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8432018Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8432194Z     def test_replace_occurrences_case_sensitive():
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8432499Z         """Test replace_occurrences preserves case."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8432639Z         replace.reset_module_state()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8432854Z         replace._REPLACEMENT_MAPPING = {"test": "replacement"}
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8433161Z >       replace._prepare_internal_structures()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8433638Z E       AttributeError: module 'mass_find_replace.replace_logic' has no attribute '_prepare_internal_structures'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8433648Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8433844Z tests/test_final_coverage_push.py:315: AttributeError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8434114Z ___________________ test_replace_occurrences_with_diacritics ___________________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8434122Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8434304Z     def test_replace_occurrences_with_diacritics():
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8434490Z         """Test replace_occurrences with diacritics."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8434623Z         replace.reset_module_state()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8434837Z         replace._REPLACEMENT_MAPPING = {"cafe": "restaurant"}
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8434987Z >       replace._prepare_internal_structures()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8435466Z E       AttributeError: module 'mass_find_replace.replace_logic' has no attribute '_prepare_internal_structures'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8435484Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8435678Z tests/test_final_coverage_push.py:326: AttributeError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8435930Z _____________________ test_main_flow_user_declines_resume ______________________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8435947Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8436314Z tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-0/test_main_flow_user_declines_r0')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8436633Z monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7fbfe6afa650>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8436642Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8436898Z     def test_main_flow_user_declines_resume(tmp_path, monkeypatch):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8437259Z         """Test when user declines to resume."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8437388Z         test_dir = tmp_path / "test"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8437510Z         test_dir.mkdir()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8437609Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8437752Z         # Create existing transaction file
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8437957Z         trans_file = test_dir / mfr.MAIN_TRANSACTION_FILE_NAME
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8438097Z         trans_file.write_text(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8438221Z             json.dumps(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8438326Z                 [
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8438612Z                     {"STATUS": "COMPLETED", "id": "1", "TYPE": "FILE_RENAME", "PATH": "test.txt"},
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8438890Z                     {"STATUS": "PENDING", "id": "2", "TYPE": "FILE_RENAME", "PATH": "test2.txt"},
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8438993Z                 ]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8439093Z             )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8439199Z         )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8439298Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8439467Z         mapping_file = tmp_path / "mapping.json"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8439741Z         mapping_file.write_text('{"REPLACEMENT_MAPPING": {"old": "new"}}')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8439842Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8440011Z         # User says no to resume, then yes to proceed
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8440141Z         inputs = iter(["n", "y"])
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8440404Z         monkeypatch.setattr("builtins.input", lambda _: next(inputs))
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8440517Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8440980Z         with patch("mass_find_replace.file_system_operations.scan_directory_for_occurrences", return_value=[]):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8441099Z             mfr.main_flow(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8441239Z                 directory=str(test_dir),
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8466096Z                 mapping_file=str(mapping_file),
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8466302Z                 extensions=None,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8466451Z                 exclude_dirs=[],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8466583Z                 exclude_files=[],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8466722Z                 dry_run=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8466858Z                 skip_scan=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8466983Z                 resume=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8467127Z                 force_execution=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8467282Z                 ignore_symlinks_arg=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8467416Z                 use_gitignore=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8467577Z                 custom_ignore_file_path=None,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8467947Z                 skip_file_renaming=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8468092Z                 skip_folder_renaming=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8468228Z                 skip_content=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8468355Z                 timeout_minutes=10,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8468483Z                 quiet_mode=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8468613Z                 verbose_mode=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8468752Z                 interactive_mode=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8468855Z             )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8468961Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8469116Z         # Transaction file should be deleted
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8469267Z >       assert not trans_file.exists()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8469425Z E       AssertionError: assert not True
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8469553Z E        +  where True = exists()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8470197Z E        +    where exists = PosixPath('/tmp/pytest-of-runner/pytest-0/test_main_flow_user_declines_r0/test/planned_transactions.json').exists
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8470218Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8470444Z tests/test_final_coverage_push.py:384: AssertionError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8470703Z ________________________ test_main_flow_resume_dry_run _________________________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8470719Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8471088Z tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-0/test_main_flow_resume_dry_run0')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8471097Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8471273Z     def test_main_flow_resume_dry_run(tmp_path):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8471449Z         """Test resume with dry_run forces rescan."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8471587Z         test_dir = tmp_path / "test"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8471872Z         test_dir.mkdir()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8471983Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8472119Z         # Create transaction file
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8472489Z         trans_file = test_dir / mfr.MAIN_TRANSACTION_FILE_NAME
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8472946Z         trans_file.write_text(json.dumps([{"id": "1", "TYPE": "FILE_RENAME", "PATH": "test.txt", "STATUS": "COMPLETED"}]))
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8473058Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8473229Z         mapping_file = tmp_path / "mapping.json"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8473501Z         mapping_file.write_text('{"REPLACEMENT_MAPPING": {"old": "new"}}')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8473601Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8474146Z         with patch("mass_find_replace.file_system_operations.scan_directory_for_occurrences", return_value=[]) as mock_scan:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8474273Z             mfr.main_flow(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8474417Z                 directory=str(test_dir),
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8474582Z                 mapping_file=str(mapping_file),
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8474720Z                 extensions=None,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8474846Z                 exclude_dirs=[],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8474971Z                 exclude_files=[],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8475091Z                 dry_run=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8475219Z                 skip_scan=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8475342Z                 resume=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8475478Z                 force_execution=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8475638Z                 ignore_symlinks_arg=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8475766Z                 use_gitignore=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8475913Z                 custom_ignore_file_path=None,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8476058Z                 skip_file_renaming=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8476199Z                 skip_folder_renaming=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8476336Z                 skip_content=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8476463Z                 timeout_minutes=10,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8476585Z                 quiet_mode=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8476716Z                 verbose_mode=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8476858Z                 interactive_mode=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8476962Z             )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8477066Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8477346Z             # Check that paths_to_force_rescan was None (rescan all)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8477502Z >           args, kwargs = mock_scan.call_args
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8477741Z E           TypeError: cannot unpack non-iterable NoneType object
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8477903Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8478095Z tests/test_final_coverage_push.py:493: TypeError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8478377Z __________________ test_main_flow_resume_check_modified_files __________________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8478386Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8478751Z tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-0/test_main_flow_resume_check_mo0')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8478759Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8478984Z     def test_main_flow_resume_check_modified_files(tmp_path):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8479165Z         """Test resume checking for modified files."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8479299Z         test_dir = tmp_path / "test"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8479435Z         test_dir.mkdir()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8479534Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8479656Z         # Create a test file
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8479814Z         test_file = test_dir / "modified.txt"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8479956Z         test_file.write_text("content")
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8480055Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8480216Z         # Create transaction file with timestamp
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8480359Z         current_time = time.time()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8480566Z         trans_file = test_dir / mfr.MAIN_TRANSACTION_FILE_NAME
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8480706Z         trans_file.write_text(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8480824Z             json.dumps(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8480937Z                 [
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8481045Z                     {
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8481163Z                         "id": "1",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8481310Z                         "TYPE": "FILE_CONTENT",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8481449Z                         "PATH": "modified.txt",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8481761Z                         "STATUS": "COMPLETED",
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8482029Z                         "timestamp_processed": current_time - 100,  # 100 seconds ago
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8482139Z                     }
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8482244Z                 ]
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8482501Z             )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8482606Z         )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8482710Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8482864Z         # Touch the file to make it newer
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8482988Z         test_file.touch()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8483091Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8483256Z         mapping_file = tmp_path / "mapping.json"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8483530Z         mapping_file.write_text('{"REPLACEMENT_MAPPING": {"old": "new"}}')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8483638Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8484174Z         with patch("mass_find_replace.file_system_operations.scan_directory_for_occurrences", return_value=[]) as mock_scan:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8484309Z             mfr.main_flow(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8484458Z                 directory=str(test_dir),
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8484621Z                 mapping_file=str(mapping_file),
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8484752Z                 extensions=None,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8484875Z                 exclude_dirs=[],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8484998Z                 exclude_files=[],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8485122Z                 dry_run=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8485243Z                 skip_scan=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8485370Z                 resume=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8485509Z                 force_execution=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8485648Z                 ignore_symlinks_arg=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8485783Z                 use_gitignore=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8485930Z                 custom_ignore_file_path=None,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8486065Z                 skip_file_renaming=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8486213Z                 skip_folder_renaming=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8486343Z                 skip_content=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8486466Z                 timeout_minutes=10,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8486604Z                 quiet_mode=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8486727Z                 verbose_mode=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8486866Z                 interactive_mode=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8486975Z             )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8487072Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8487243Z             # Check that the file was marked for rescan
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8487398Z >           args, kwargs = mock_scan.call_args
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8487786Z E           TypeError: cannot unpack non-iterable NoneType object
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8487796Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8487983Z tests/test_final_coverage_push.py:624: TypeError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8488255Z __________________ test_main_flow_reset_dry_run_transactions ___________________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8488264Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8488625Z tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-0/test_main_flow_reset_dry_run_t0')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8488642Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8488862Z     def test_main_flow_reset_dry_run_transactions(tmp_path):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8489064Z         """Test resetting DRY_RUN completed transactions."""
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8489205Z         test_dir = tmp_path / "test"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8489330Z         test_dir.mkdir()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8489430Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8489644Z         trans_file = test_dir / mfr.MAIN_TRANSACTION_FILE_NAME
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8490178Z         trans_file.write_text(json.dumps([{"id": "1", "TYPE": "FILE_RENAME", "PATH": "test.txt", "STATUS": "COMPLETED", "ERROR_MESSAGE": "DRY_RUN"}]))
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8490298Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8490458Z         mapping_file = tmp_path / "mapping.json"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8490724Z         mapping_file.write_text('{"REPLACEMENT_MAPPING": {"old": "new"}}')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8490836Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8491375Z         with patch("mass_find_replace.file_system_operations.execute_all_transactions", return_value={}) as mock_exec:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8491498Z             mfr.main_flow(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8491642Z                 directory=str(test_dir),
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8491954Z                 mapping_file=str(mapping_file),
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8492078Z                 extensions=None,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8492204Z                 exclude_dirs=[],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8492468Z                 exclude_files=[],
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8492596Z                 dry_run=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8492717Z                 skip_scan=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8492846Z                 resume=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8492985Z                 force_execution=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8493121Z                 ignore_symlinks_arg=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8493247Z                 use_gitignore=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8493400Z                 custom_ignore_file_path=None,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8493535Z                 skip_file_renaming=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8493677Z                 skip_folder_renaming=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8493811Z                 skip_content=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8493935Z                 timeout_minutes=10,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8494069Z                 quiet_mode=True,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8494192Z                 verbose_mode=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8494326Z                 interactive_mode=False,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8494433Z             )
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8494532Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8494720Z             # Transaction should have been reset to PENDING
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8494870Z >           mock_exec.assert_called_once()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8494886Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8495034Z tests/test_final_coverage_push.py:763:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8495216Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8495230Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8495508Z self = <MagicMock name='execute_all_transactions' id='140462185945488'>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8495517Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8495654Z     def assert_called_once(self):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8495829Z         """assert that the mock was called only once.
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8495931Z         """
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8496065Z         if not self.call_count == 1:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8496337Z             msg = ("Expected '%s' to have been called once. Called %s times.%s"
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8496484Z                    % (self._mock_name or 'mock',
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8496619Z                       self.call_count,
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8496751Z                       self._calls_repr()))
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8496889Z >           raise AssertionError(msg)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8497533Z E           AssertionError: Expected 'execute_all_transactions' to have been called once. Called 0 times.
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8497542Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8498060Z ../../../.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/unittest/mock.py:908: AssertionError
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8498240Z ================================ tests coverage ================================
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8498527Z _______________ coverage: platform linux, python 3.10.18-final-0 _______________
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8498536Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8498712Z Name                                              Stmts   Miss  Cover
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8498915Z ---------------------------------------------------------------------
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8499171Z src/mass_find_replace/__init__.py                     5      0   100%
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8499440Z src/mass_find_replace/file_system_operations.py     818    268    67%
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8499702Z src/mass_find_replace/mass_find_replace.py          425     77    82%
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8499963Z src/mass_find_replace/replace_logic.py              175      8    95%
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8500153Z ---------------------------------------------------------------------
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8500317Z TOTAL                                              1423    353    75%
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:02.8500477Z Coverage XML written to file coverage.xml
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9073986Z =========================== short test summary info ============================
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9077844Z FAILED tests/test_additional_coverage.py::test_main_flow_gitignore_read_error - AssertionError: assert ('Warning: Could not read .gitignore file' in '\x1b[92m✓ Found .gitignore file - exclusion patterns will be applied\x1b[0m\n' or 'Warning: Could not read .gitignore file' in '')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9081074Z  +  where '\x1b[92m✓ Found .gitignore file - exclusion patterns will be applied\x1b[0m\n' = CaptureResult(out='\x1b[92m✓ Found .gitignore file - exclusion patterns will be applied\x1b[0m\n', err='').out
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9083045Z  +  and   '' = CaptureResult(out='\x1b[92m✓ Found .gitignore file - exclusion patterns will be applied\x1b[0m\n', err='').err
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9084455Z FAILED tests/test_comprehensive_coverage.py::TestFileOperations::test_get_file_encoding_various_files - AssertionError: assert 'utf-8' == 'latin-1'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9085444Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9085687Z   - latin-1
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9085947Z   + utf-8
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9086668Z FAILED tests/test_comprehensive_coverage.py::TestFileOperations::test_save_and_load_transactions - OSError: No space
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9087991Z FAILED tests/test_comprehensive_coverage.py::TestScanAndExecute::test_scan_directory_with_transactions - KeyError: 'type'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9089259Z FAILED tests/test_comprehensive_coverage.py::TestScanAndExecute::test_scan_with_large_file - KeyError: 'type'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9090494Z FAILED tests/test_comprehensive_coverage.py::TestScanAndExecute::test_execute_rename_transaction - KeyError: 'PATH'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9091802Z FAILED tests/test_comprehensive_coverage.py::TestScanAndExecute::test_execute_content_line_transaction - KeyError: 'PATH'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9093266Z FAILED tests/test_comprehensive_coverage.py::TestScanAndExecute::test_execute_file_content_batch - assert 0 == 2
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9094553Z FAILED tests/test_comprehensive_coverage.py::TestScanAndExecute::test_process_large_file_content - KeyError: 'LINE_NUMBER'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9095905Z FAILED tests/test_comprehensive_coverage.py::TestScanAndExecute::test_group_and_process_file_transactions - KeyError: 'TYPE'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9097226Z FAILED tests/test_comprehensive_coverage.py::TestScanAndExecute::test_execute_all_transactions - KeyError: 'TYPE'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9098707Z FAILED tests/test_comprehensive_coverage.py::TestReplaceLogic::test_load_replacement_map_all_errors - AssertionError: assert True == {'valid': 'replacement'}
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9100337Z FAILED tests/test_comprehensive_coverage.py::TestReplaceLogic::test_actual_replace_callback - AssertionError: assert 'OldName' == 'NewName'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9101483Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9101732Z   - NewName
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9101986Z   + OldName
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9103017Z FAILED tests/test_comprehensive_coverage.py::TestReplaceLogic::test_replace_occurrences_all_cases - AssertionError: expected call not found.
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9104061Z Expected: warning('No replacement map loaded.')
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9104502Z Actual: not called.
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9105163Z FAILED tests/test_comprehensive_coverage.py::TestCLIAndMain::test_main_cli_self_test - SystemExit: 0
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9106479Z FAILED tests/test_comprehensive_coverage.py::TestCLIAndMain::test_main_cli_missing_dependency - Failed: DID NOT RAISE <class 'ImportError'>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9107908Z FAILED tests/test_comprehensive_coverage.py::TestCLIAndMain::test_check_existing_transactions_comprehensive - assert False
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9109647Z FAILED tests/test_comprehensive_coverage.py::TestCLIAndMain::test_get_operation_description_all_combinations - AssertionError: assert 'folder names...file contents' == 'file names and file contents'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9110911Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9111187Z   - file names and file contents
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9111537Z   ?  ^
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9111811Z   + folder names and file contents
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9112166Z   ?  ^ + +
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9113005Z FAILED tests/test_coverage_fixes.py::test_main_flow_verbose_logging - AssertionError: assert 'Verbose mode enabled' in ''
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9114040Z  +  where '' = <_pytest.logging.LogCaptureFixture object at 0x7fbfe7f93850>.text
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9115124Z FAILED tests/test_coverage_fixes.py::test_main_flow_gitignore_loading - AssertionError: assert False
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9116081Z  +  where False = <MagicMock name='scan_directory_for_occurrences' id='140462143090896'>.called
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9117039Z FAILED tests/test_coverage_fixes.py::test_main_flow_custom_ignore_file - AssertionError: assert False
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9117992Z  +  where False = <MagicMock name='scan_directory_for_occurrences' id='140462185572592'>.called
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9118862Z FAILED tests/test_coverage_fixes.py::test_main_cli_self_test_fallback - assert 0 == 3
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9119490Z  +  where 0 = len([])
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9120070Z FAILED tests/test_coverage_fixes.py::test_load_replacement_map_errors - assert False is None
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9121734Z FAILED tests/test_coverage_improvement.py::test_get_logger_import_error - ValueError: Duplicated timeseries in CollectorRegistry: {'prefect_events_emitted', 'prefect_events_emitted_created', 'prefect_events_emitted_total'}
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9123739Z FAILED tests/test_coverage_improvement.py::test_main_flow_verbose_logging - AssertionError: assert 'Verbose mode enabled' in ''
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9124796Z  +  where '' = <_pytest.logging.LogCaptureFixture object at 0x7fbfd7f05090>.text
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9125834Z FAILED tests/test_coverage_improvement.py::test_main_flow_print_mapping_and_confirm - AssertionError: assert 'OldName' in ''
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9126740Z  +  where '' = CaptureResult(out='', err='').out
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9127668Z FAILED tests/test_coverage_improvement.py::test_main_flow_gitignore_loading - TypeError: cannot unpack non-iterable NoneType object
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9129056Z FAILED tests/test_coverage_improvement.py::test_main_flow_custom_ignore_file - TypeError: cannot unpack non-iterable NoneType object
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9130369Z FAILED tests/test_coverage_improvement.py::test_main_cli_missing_dependency - Failed: DID NOT RAISE <class 'SystemExit'>
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9131483Z FAILED tests/test_coverage_improvement.py::test_main_cli_self_test_fallback - assert 0 == 3
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9132150Z  +  where 0 = len([])
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9133169Z FAILED tests/test_coverage_improvement.py::test_replace_logic_log_message_debug - TypeError: _log_message() got multiple values for argument 'level'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9134710Z FAILED tests/test_coverage_improvement.py::test_replace_logic_log_message_no_logger - TypeError: _log_message() got multiple values for argument 'level'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9135996Z FAILED tests/test_edge_cases.py::test_cli_self_test - assert 0 == 1
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9136542Z  +  where 0 = SystemExit(0).code
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9137047Z  +    where SystemExit(0) = <ExceptionInfo SystemExit(0) tblen=2>.value
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9138118Z FAILED tests/test_final_coverage_push.py::test_log_fs_op_message_with_logger - AssertionError: Expected 'info' to be called once. Called 0 times.
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9139529Z FAILED tests/test_final_coverage_push.py::test_get_file_encoding_chardet_confidence - AssertionError: assert 'cp1252' == 'utf-8'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9140363Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9140610Z   - utf-8
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9140859Z   + cp1252
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9141469Z FAILED tests/test_final_coverage_push.py::test_load_ignore_patterns_empty_file - assert None is not None
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9142726Z FAILED tests/test_final_coverage_push.py::test_save_transactions_with_backup - AssertionError: assert False
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9143493Z  +  where False = exists()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9144286Z  +    where exists = PosixPath('/tmp/pytest-of-runner/pytest-0/test_save_transactions_with_ba0/transactions.json.bak').exists
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9145735Z FAILED tests/test_final_coverage_push.py::test_strip_control_characters_with_controls - AssertionError: assert 'HelloWorldTest' == 'Hello\nWorld\tTest'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9146712Z
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9146945Z   - Hello
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9147202Z   - World	Test
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9147623Z   ?      -
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9147878Z   + HelloWorldTest
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9148160Z   ? +++++
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9149187Z FAILED tests/test_final_coverage_push.py::test_get_scan_pattern_with_mapping - AttributeError: module 'mass_find_replace.replace_logic' has no attribute '_prepare_internal_structures'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9151080Z FAILED tests/test_final_coverage_push.py::test_replace_occurrences_basic - AttributeError: module 'mass_find_replace.replace_logic' has no attribute '_prepare_internal_structures'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9153201Z FAILED tests/test_final_coverage_push.py::test_replace_occurrences_case_sensitive - AttributeError: module 'mass_find_replace.replace_logic' has no attribute '_prepare_internal_structures'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9155223Z FAILED tests/test_final_coverage_push.py::test_replace_occurrences_with_diacritics - AttributeError: module 'mass_find_replace.replace_logic' has no attribute '_prepare_internal_structures'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9156807Z FAILED tests/test_final_coverage_push.py::test_main_flow_user_declines_resume - AssertionError: assert not True
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9157666Z  +  where True = exists()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9158489Z  +    where exists = PosixPath('/tmp/pytest-of-runner/pytest-0/test_main_flow_user_declines_r0/test/planned_transactions.json').exists
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9159828Z FAILED tests/test_final_coverage_push.py::test_main_flow_resume_dry_run - TypeError: cannot unpack non-iterable NoneType object
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9161208Z FAILED tests/test_final_coverage_push.py::test_main_flow_resume_check_modified_files - TypeError: cannot unpack non-iterable NoneType object
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9162991Z FAILED tests/test_final_coverage_push.py::test_main_flow_reset_dry_run_transactions - AssertionError: Expected 'execute_all_transactions' to have been called once. Called 0 times.
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:03.9164221Z ================== 46 failed, 167 passed in 217.64s (0:03:37) ==================
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:48.2257745Z --- Logging error ---
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:48.2262854Z Traceback (most recent call last):
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:48.2265273Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/prefect/logging/handlers.py", line 337, in emit
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:48.2266184Z     self.console.print(message, soft_wrap=True)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:48.2268138Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/rich/console.py", line 1692, in print
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:48.2269340Z     with self:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:48.2270118Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/rich/console.py", line 866, in __exit__
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:48.2270927Z     self._exit_buffer()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:48.2271663Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/rich/console.py", line 824, in _exit_buffer
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:48.2272638Z     self._check_buffer()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:48.2273529Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/rich/console.py", line 2033, in _check_buffer
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:48.2274555Z     self._write_buffer()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:48.2275450Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/rich/console.py", line 2102, in _write_buffer
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:48.2276351Z     self.file.write(text)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:48.2276763Z ValueError: I/O operation on closed file.
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:48.2277062Z Call stack:
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:48.2277638Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/prefect/server/api/server.py", line 917, in stop
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:48.2278251Z     subprocess_server_logger.info(
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:48.2278912Z   File "/home/runner/.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/logging/__init__.py", line 1477, in info
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:48.2279557Z     self._log(INFO, msg, args, **kwargs)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:48.2280164Z   File "/home/runner/.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/logging/__init__.py", line 1624, in _log
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:48.2280689Z     self.handle(record)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:48.2281201Z   File "/home/runner/.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/logging/__init__.py", line 1634, in handle
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:48.2282006Z     self.callHandlers(record)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:48.2283137Z   File "/home/runner/.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/logging/__init__.py", line 1696, in callHandlers
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:48.2284096Z     hdlr.handle(record)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:48.2284998Z   File "/home/runner/.local/share/uv/python/cpython-3.10.18-linux-x86_64-gnu/lib/python3.10/logging/__init__.py", line 968, in handle
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:48.2285794Z     self.emit(record)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:48.2286288Z   File "/home/runner/work/MFR/MFR/.venv/lib/python3.10/site-packages/prefect/logging/handlers.py", line 343, in emit
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:48.2286776Z     self.handleError(record)
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:48.2287065Z Message: 'Stopping temporary server on http://127.0.0.1:8559'
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:48.2287364Z Arguments: ()
Test Python 3.10 on ubuntu-latest	Run tests with coverage	2025-06-24T15:03:49.9165029Z ##[error]Process completed with exit code 1.
Test Python 3.10 on ubuntu-latest	Post Run actions/checkout@v4	﻿2025-06-24T15:03:49.9270817Z Post job cleanup.
Test Python 3.10 on ubuntu-latest	Post Run actions/checkout@v4	2025-06-24T15:03:50.0237873Z [command]/usr/bin/git version
Test Python 3.10 on ubuntu-latest	Post Run actions/checkout@v4	2025-06-24T15:03:50.0275338Z git version 2.49.0
Test Python 3.10 on ubuntu-latest	Post Run actions/checkout@v4	2025-06-24T15:03:50.0321189Z Temporarily overriding HOME='/home/runner/work/_temp/240b04d4-7f96-42e0-b587-b07436d07e7a' before making global git config changes
Test Python 3.10 on ubuntu-latest	Post Run actions/checkout@v4	2025-06-24T15:03:50.0322638Z Adding repository directory to the temporary git global config as a safe directory
Test Python 3.10 on ubuntu-latest	Post Run actions/checkout@v4	2025-06-24T15:03:50.0336079Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/MFR/MFR
Test Python 3.10 on ubuntu-latest	Post Run actions/checkout@v4	2025-06-24T15:03:50.0373893Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
Test Python 3.10 on ubuntu-latest	Post Run actions/checkout@v4	2025-06-24T15:03:50.0407300Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
Test Python 3.10 on ubuntu-latest	Post Run actions/checkout@v4	2025-06-24T15:03:50.0644247Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
Test Python 3.10 on ubuntu-latest	Post Run actions/checkout@v4	2025-06-24T15:03:50.0666495Z http.https://github.com/.extraheader
Test Python 3.10 on ubuntu-latest	Post Run actions/checkout@v4	2025-06-24T15:03:50.0679445Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
Test Python 3.10 on ubuntu-latest	Post Run actions/checkout@v4	2025-06-24T15:03:50.0710188Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
Test Python 3.10 on ubuntu-latest	Complete job	﻿2025-06-24T15:03:50.1065090Z Cleaning up orphan processes
