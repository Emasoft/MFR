# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
default_language_version:
  python: python3.11

repos:
  # UV for fast Python formatting
  - repo: https://github.com/astral-sh/uv-pre-commit
    rev: 0.7.13
    hooks:
      # Compile requirements
      - id: pip-compile
        args: [pyproject.toml, -o, requirements.txt, --python-version=3.10]
      # Compile dev requirements
      - id: pip-compile
        name: pip-compile dev-requirements
        args: [pyproject.toml, --extra=dev, -o, requirements-dev.txt, --python-version=3.10]

  # Gitleaks for secret scanning
  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.27.2
    hooks:
      - id: gitleaks

  # Ruff for linting and formatting (run with uv)
  - repo: local
    hooks:
      - id: ruff
        name: ruff (legacy alias)
        entry: uv run ruff check --fix
        language: system
        types: [python]
        require_serial: true
      - id: ruff-format
        name: ruff format
        entry: uv run ruff format
        language: system
        types: [python]
        require_serial: true

  # Mypy for type checking (run with uv)
  - repo: local
    hooks:
      - id: mypy
        name: mypy
        entry: uv run mypy
        language: system
        types: [python]
        files: ^(src/|tests/)
        args:
          [
            --strict,
            --show-error-codes,
            --show-error-context,
            --pretty,
            --ignore-missing-imports,
            --no-warn-unused-ignores,
            --allow-untyped-decorators,  # For pytest fixtures
          ]
        require_serial: true

  # Deptry for dependency checking (run with uv)
  - repo: local
    hooks:
      - id: deptry
        name: deptry
        entry: uv run deptry
        language: system
        pass_filenames: false
        files: ^(src/|pyproject\.toml)$
        args: [src]

  # Standard pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        args: [--allow-multiple-documents]
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: check-merge-conflict
      - id: check-toml
      - id: debug-statements
      - id: detect-private-key
        exclude: \.gitleaks\.toml$
      - id: mixed-line-ending
        args: [--fix=lf]
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-json
      - id: pretty-format-json
        args: [--autofix, --no-sort-keys]

  # YAML linting (run with uv)
  - repo: local
    hooks:
      - id: yamllint
        name: yamllint
        entry: uv run yamllint
        language: system
        types: [yaml]
        args: [-c=.yamllint.yml]

  # YAML formatting with yamlfmt
  - repo: local
    hooks:
      - id: yamlfmt
        name: yamlfmt
        entry: ./scripts/yamlfmt.sh
        language: system
        types: [yaml]
        require_serial: true

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck
        args: [--severity=warning]

  # GitHub Actions linting - actionlint must be installed separately
  # Install with: brew install actionlint (macOS) or download from GitHub
  - repo: local
    hooks:
      - id: actionlint
        name: actionlint
        entry: actionlint
        language: system
        files: ^\.github/workflows/.*\.(yml|yaml)$
        pass_filenames: true

  # Run tests before committing (only when Python files change)
  - repo: local
    hooks:
      - id: pytest
        name: pytest
        entry: uv run pytest
        language: system
        pass_filenames: false
        files: ^(src/.*\.py|tests/.*\.py|pyproject\.toml)$
        args: [tests/, -v]


# Configuration for specific hooks
exclude: |
  (?x)^(
    \.git/|
    \.mypy_cache/|
    \.pytest_cache/|
    \.venv/|
    venv/|
    \.env|
    build/|
    dist/|
    .*\.egg-info/|
    __pycache__/|
    \.coverage|
    htmlcov/|
    \.DS_Store|
    planned_transactions\.json|
    uv\.lock
  )$
