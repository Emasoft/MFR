# Sequential pre-commit configuration
# All hooks run one at a time to minimize resource usage

default_language_version:
  python: python3.11

default_stages: [pre-commit]

# Ensure pre-commit uses uv for all Python-based hooks
default_install_hook_types: [pre-commit, pre-push, commit-msg]
minimum_pre_commit_version: '4.0.0'

# CI configuration
ci:
  skip:
    - mypy-limited
    - trufflehog-limited

repos:
  # UV for dependency management and formatting
  - repo: https://github.com/astral-sh/uv-pre-commit
    rev: 0.7.13
    hooks:
      # Keep uv.lock up to date
      - id: uv-lock
        files: ^(pyproject\.toml|uv\.lock)$
        pass_filenames: false
        require_serial: true
      # Export requirements for compatibility
      - id: uv-export
        args: [--frozen, --no-hashes, -o, requirements.txt]
        files: ^(pyproject\.toml|uv\.lock)$
        require_serial: true
      # Export dev requirements
      - id: uv-export
        name: uv-export dev-requirements
        args: [--frozen, --no-hashes, --extra=dev, -o, requirements-dev.txt]
        files: ^(pyproject\.toml|uv\.lock)$
        require_serial: true

  # Basic file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
        stages: [pre-commit]
      - id: end-of-file-fixer
        stages: [pre-commit]
      - id: check-yaml
        stages: [pre-commit]
        args: [--allow-multiple-documents]
      - id: check-added-large-files
        stages: [pre-commit]
        args: ['--maxkb=1000']
      - id: check-toml
        stages: [pre-commit]
      - id: check-json
        stages: [pre-commit]
      - id: check-merge-conflict
        stages: [pre-commit]
      - id: debug-statements
      - id: detect-private-key
      - id: mixed-line-ending
        args: [--fix=lf]
      - id: check-case-conflict
      - id: check-docstring-first
      - id: pretty-format-json
        args: [--autofix, --no-sort-keys]

  # Python tools (all with require_serial: true)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.8.5
    hooks:
      - id: ruff
        args: [--ignore, "E203,E402,E501,E266,W505,F841,F842,F401,W293,I001,UP015,C901,W291", --isolated, --fix, --output-format=full]
        stages: [pre-commit]
        require_serial: true
      - id: ruff-format
        args: [--line-length=320, --isolated]
        stages: [pre-commit]
        require_serial: true

  # Resource-intensive hooks using project-local wrappers
  - repo: local
    hooks:
      - id: mypy-limited
        name: Type checking (memory limited)
        entry: .pre-commit-wrappers/memory-limited-hook.sh uv run mypy
        language: system
        types: [python]
        require_serial: true
        pass_filenames: true
        stages: [pre-commit]
        files: ^src/
        exclude: ^tests/
        args: [--strict, --ignore-missing-imports, --show-error-codes, --show-error-context, --pretty, --no-warn-unused-ignores, --allow-untyped-decorators]

      - id: deptry-limited
        name: Dependency checking (memory limited)
        entry: .pre-commit-wrappers/memory-limited-hook.sh uv run deptry
        language: system
        pass_filenames: false
        require_serial: true
        files: ^(src/|pyproject\.toml)$
        args: [src]

      - id: yamllint-limited
        name: YAML linting (memory limited)
        entry: .pre-commit-wrappers/memory-limited-hook.sh uv run yamllint
        language: system
        types: [yaml]
        require_serial: true
        args: [-c=.yamllint.yml]

      - id: trufflehog-limited
        name: Secret detection (resource limited)
        entry: .pre-commit-wrappers/trufflehog-limited.sh
        language: system
        pass_filenames: false
        require_serial: true
        stages: [pre-commit, pre-push]

  # YAML formatting with yamlfmt (GitHub Actions workflows only)
  - repo: local
    hooks:
      - id: yamlfmt
        name: yamlfmt (GitHub workflows)
        entry: ./scripts/yamlfmt.sh
        language: system
        types: [yaml]
        files: ^\.github/.*\.(yml|yaml)$
        require_serial: true

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck
        args: [--severity=warning]
        require_serial: true

  # GitHub Actions linting
  - repo: local
    hooks:
      - id: actionlint
        name: actionlint
        entry: actionlint
        language: system
        files: ^\.github/workflows/.*\.(yml|yaml)$
        pass_filenames: true
        require_serial: true

  # Conventional commits check
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v4.0.0
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]
        args: []
        additional_dependencies: ['conventional-pre-commit']

# Configuration for specific hooks
exclude: |
  (?x)^(
    \.git/|
    \.mypy_cache/|
    \.pytest_cache/|
    \.venv/|
    venv/|
    \.env|
    build/|
    dist/|
    .*\.egg-info/|
    __pycache__/|
    \.coverage|
    htmlcov/|
    \.DS_Store|
    planned_transactions\.json|
    uv\.lock
  )$
